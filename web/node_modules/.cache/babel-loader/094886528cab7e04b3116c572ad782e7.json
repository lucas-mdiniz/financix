{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/BudgetsList/index.jsx\";\nimport React from 'react';\nimport PropType from 'prop-types';\nimport Pie from '../Graphs/Pie';\nimport useTransactions from '../../hooks/useTransactions'; // fazer uma array do tipo [{budget, expense}, ....]\n// criar um use expenses\n// map nos budgets e filtra as expenses.\n// ver como fazer o sort do data do pie na ordem de entrada.\n\nconst BudgetList = ({\n  data\n}) => {\n  const _useTransactions = useTransactions(),\n        _useTransactions2 = _slicedToArray(_useTransactions, 1),\n        transactions = _useTransactions2[0];\n\n  console.log(transactions);\n  const teste = data.map(budget => {\n    const _transactions$filter = transactions.filter(transaction => transaction.value === budget.id),\n          _transactions$filter2 = _slicedToArray(_transactions$filter, 1),\n          budgetAndExpense = _transactions$filter2[0];\n\n    return budgetAndExpense;\n  });\n  console.log(teste);\n  const colors = ['#ff8300', '#ccc'];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: data,\n    width: 50,\n    height: 50,\n    innerRadius: 15,\n    outerRadius: 25,\n    colors: colors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nBudgetList.defaultProps = {\n  data: {}\n};\nBudgetList.propTypes = {\n  data: PropType.arrayOf(PropType.object)\n};\nexport default BudgetList;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/BudgetsList/index.jsx"],"names":["React","PropType","Pie","useTransactions","BudgetList","data","transactions","console","log","teste","map","budget","filter","transaction","value","id","budgetAndExpense","colors","defaultProps","propTypes","arrayOf","object"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,eAAP,MAA4B,6BAA5B,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA,2BACRF,eAAe,EADP;AAAA;AAAA,QACxBG,YADwB;;AAG/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,QAAMG,KAAK,GAAGJ,IAAI,CAACK,GAAL,CAASC,MAAM,IAAI;AAAA,iCACJL,YAAY,CAACM,MAAb,CACzBC,WAAW,IAAIA,WAAW,CAACC,KAAZ,KAAsBH,MAAM,CAACI,EADnB,CADI;AAAA;AAAA,UACxBC,gBADwB;;AAK/B,WAAOA,gBAAP;AACD,GANa,CAAd;AAQAT,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEA,QAAMQ,MAAM,GAAG,CAAC,SAAD,EAAY,MAAZ,CAAf;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAEZ,IADR;AAEE,IAAA,KAAK,EAAE,EAFT;AAGE,IAAA,MAAM,EAAE,EAHV;AAIE,IAAA,WAAW,EAAE,EAJf;AAKE,IAAA,WAAW,EAAE,EALf;AAME,IAAA,MAAM,EAAEY,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD,CA3BD;;AA6BAb,UAAU,CAACc,YAAX,GAA0B;AACxBb,EAAAA,IAAI,EAAE;AADkB,CAA1B;AAIAD,UAAU,CAACe,SAAX,GAAuB;AACrBd,EAAAA,IAAI,EAAEJ,QAAQ,CAACmB,OAAT,CAAiBnB,QAAQ,CAACoB,MAA1B;AADe,CAAvB;AAIA,eAAejB,UAAf","sourcesContent":["import React from 'react';\nimport PropType from 'prop-types';\nimport Pie from '../Graphs/Pie';\nimport useTransactions from '../../hooks/useTransactions';\n\n// fazer uma array do tipo [{budget, expense}, ....]\n// criar um use expenses\n// map nos budgets e filtra as expenses.\n// ver como fazer o sort do data do pie na ordem de entrada.\n\nconst BudgetList = ({ data }) => {\n  const [transactions] = useTransactions();\n\n  console.log(transactions);\n  const teste = data.map(budget => {\n    const [budgetAndExpense] = transactions.filter(\n      transaction => transaction.value === budget.id\n    );\n\n    return budgetAndExpense;\n  });\n\n  console.log(teste);\n\n  const colors = ['#ff8300', '#ccc'];\n  return (\n    <div>\n      <Pie\n        data={data}\n        width={50}\n        height={50}\n        innerRadius={15}\n        outerRadius={25}\n        colors={colors}\n      />\n    </div>\n  );\n};\n\nBudgetList.defaultProps = {\n  data: {},\n};\n\nBudgetList.propTypes = {\n  data: PropType.arrayOf(PropType.object),\n};\n\nexport default BudgetList;\n"]},"metadata":{},"sourceType":"module"}