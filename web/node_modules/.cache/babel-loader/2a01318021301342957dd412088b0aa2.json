{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/AddTransaction/index.jsx\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { MyCheckbox, MyDateField, MyTextInput } from '../FormComponents';\n\nconst AddTransaction = () => {\n  return React.createElement(Formik, {\n    initialValues: {\n      amount: '',\n      description: '',\n      date: new Date(),\n      paid: false\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n      email: Yup.string().email('Invalid email addresss`').required('Required'),\n      acceptedTerms: Yup.boolean().required('Required').oneOf([true], 'You must accept the terms and conditions.'),\n      jobType: Yup.string() // specify the set of valid values for job type\n      // @see http://bit.ly/yup-mixed-oneOf\n      .oneOf(['designer', 'development', 'product', 'other'], 'Invalid Job Type').required('Required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(MyTextInput, {\n    label: \"Description\",\n    name: \"description\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(MyTextInput, {\n    label: \"Amount\",\n    name: \"amount\",\n    type: \"text\",\n    placeholder: \"0,00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(MyDateField, {\n    label: \"Date\",\n    name: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(MyCheckbox, {\n    name: \"paid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Paid\")));\n};\n\nexport default AddTransaction;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/AddTransaction/index.jsx"],"names":["React","Formik","Form","Yup","MyCheckbox","MyDateField","MyTextInput","AddTransaction","amount","description","date","Date","paid","object","firstName","string","max","required","lastName","email","acceptedTerms","boolean","oneOf","jobType","values","setSubmitting","setTimeout","alert","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,WAAlC,QAAqD,mBAArD;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,MAAM,EAAE,EADK;AAEbC,MAAAA,WAAW,EAAE,EAFA;AAGbC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAHO;AAIbC,MAAAA,IAAI,EAAE;AAJO,KADjB;AAOE,IAAA,gBAAgB,EAAET,GAAG,CAACU,MAAJ,CAAW;AAC3BC,MAAAA,SAAS,EAAEX,GAAG,CAACY,MAAJ,GACRC,GADQ,CACJ,EADI,EACA,+BADA,EAERC,QAFQ,CAEC,UAFD,CADgB;AAI3BC,MAAAA,QAAQ,EAAEf,GAAG,CAACY,MAAJ,GACPC,GADO,CACH,EADG,EACC,+BADD,EAEPC,QAFO,CAEE,UAFF,CAJiB;AAO3BE,MAAAA,KAAK,EAAEhB,GAAG,CAACY,MAAJ,GACJI,KADI,CACE,yBADF,EAEJF,QAFI,CAEK,UAFL,CAPoB;AAU3BG,MAAAA,aAAa,EAAEjB,GAAG,CAACkB,OAAJ,GACZJ,QADY,CACH,UADG,EAEZK,KAFY,CAEN,CAAC,IAAD,CAFM,EAEE,2CAFF,CAVY;AAa3BC,MAAAA,OAAO,EAAEpB,GAAG,CAACY,MAAJ,GACP;AACA;AAFO,OAGNO,KAHM,CAIL,CAAC,UAAD,EAAa,aAAb,EAA4B,SAA5B,EAAuC,OAAvC,CAJK,EAKL,kBALK,EAONL,QAPM,CAOG,UAPH;AAbkB,KAAX,CAPpB;AA6BE,IAAA,QAAQ,EAAE,CAACO,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvCC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAC,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KAlCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoCE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,aAAnB;AAAiC,IAAA,IAAI,EAAC,aAAtC;AAAoD,IAAA,IAAI,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAUE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,MAAnB;AAA0B,IAAA,IAAI,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,CApCF,CADF;AAoDD,CArDD;;AAuDA,eAAelB,cAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { MyCheckbox, MyDateField, MyTextInput } from '../FormComponents';\n\nconst AddTransaction = () => {\n  return (\n    <Formik\n      initialValues={{\n        amount: '',\n        description: '',\n        date: new Date(),\n        paid: false,\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string()\n          .max(15, 'Must be 15 characters or less')\n          .required('Required'),\n        lastName: Yup.string()\n          .max(20, 'Must be 20 characters or less')\n          .required('Required'),\n        email: Yup.string()\n          .email('Invalid email addresss`')\n          .required('Required'),\n        acceptedTerms: Yup.boolean()\n          .required('Required')\n          .oneOf([true], 'You must accept the terms and conditions.'),\n        jobType: Yup.string()\n          // specify the set of valid values for job type\n          // @see http://bit.ly/yup-mixed-oneOf\n          .oneOf(\n            ['designer', 'development', 'product', 'other'],\n            'Invalid Job Type'\n          )\n          .required('Required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      <Form>\n        <MyTextInput label=\"Description\" name=\"description\" type=\"text\" />\n\n        <MyTextInput\n          label=\"Amount\"\n          name=\"amount\"\n          type=\"text\"\n          placeholder=\"0,00\"\n        />\n\n        <MyDateField label=\"Date\" name=\"date\" />\n        <MyCheckbox name=\"paid\">Paid</MyCheckbox>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default AddTransaction;\n"]},"metadata":{},"sourceType":"module"}