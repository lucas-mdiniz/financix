{"ast":null,"code":"import _objectSpread from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/MyDateField/index.jsx\";\nimport React from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport { StyledLabel, StyledDatePickerWrapper, ErrorMessage } from '../styles';\n\nconst MyDateField = (_ref) => {\n  let label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const _useField = useField(_objectSpread({}, props, {\n    type: 'date'\n  })),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  const id = props.id,\n        placeholder = props.placeholder;\n  const name = field.name,\n        value = field.value,\n        onBlur = field.onBlur,\n        onChange = field.onChange;\n  console.log(field);\n\n  const _useFormikContext = useFormikContext(),\n        setFieldValue = _useFormikContext.setFieldValue;\n\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: props.id || props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, label), React.createElement(StyledDatePickerWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(DatePicker, Object.assign({\n    selected: meta.value,\n    onChange: date => setFieldValue('date', date)\n  }, newField, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nexport default MyDateField;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/MyDateField/index.jsx"],"names":["React","useField","useFormikContext","DatePicker","StyledLabel","StyledDatePickerWrapper","ErrorMessage","MyDateField","label","props","type","field","meta","id","placeholder","name","value","onBlur","onChange","console","log","setFieldValue","date","newField","touched","error"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,QAA3C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT,EAAsBC,uBAAtB,EAA+CC,YAA/C,QAAmE,WAAnE;;AAEA,MAAMC,WAAW,GAAG,UAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAAA,oBACrBR,QAAQ,mBAAMQ,KAAN;AAAaC,IAAAA,IAAI,EAAE;AAAnB,KADa;AAAA;AAAA,QACpCC,KADoC;AAAA,QAC7BC,IAD6B;;AAAA,QAEnCC,EAFmC,GAEfJ,KAFe,CAEnCI,EAFmC;AAAA,QAE/BC,WAF+B,GAEfL,KAFe,CAE/BK,WAF+B;AAAA,QAGnCC,IAHmC,GAGDJ,KAHC,CAGnCI,IAHmC;AAAA,QAG7BC,KAH6B,GAGDL,KAHC,CAG7BK,KAH6B;AAAA,QAGtBC,MAHsB,GAGDN,KAHC,CAGtBM,MAHsB;AAAA,QAGdC,QAHc,GAGDP,KAHC,CAGdO,QAHc;AAI3CC,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;;AAJ2C,4BAMjBT,gBAAgB,EANC;AAAA,QAMnCmB,aANmC,qBAMnCA,aANmC;;AAQ3C,SACE,0CACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEZ,KAAK,CAACI,EAAN,IAAYJ,KAAK,CAACM,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CP,KAA/C,CADF,EAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEI,IAAI,CAACI,KADjB;AAEE,IAAA,QAAQ,EAAEM,IAAI,IAAID,aAAa,CAAC,MAAD,EAASC,IAAT;AAFjC,KAGMC,QAHN,EAIMd,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,EAUGG,IAAI,CAACY,OAAL,IAAgBZ,IAAI,CAACa,KAArB,GACC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCb,IAAI,CAACa,KAAtC,CADD,GAEG,IAZN,CADF;AAgBD,CAxBD;;AA0BA,eAAelB,WAAf","sourcesContent":["import React from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport { StyledLabel, StyledDatePickerWrapper, ErrorMessage } from '../styles';\n\nconst MyDateField = ({ label, ...props }) => {\n  const [field, meta] = useField({ ...props, type: 'date' });\n  const { id, placeholder } = props;\n  const { name, value, onBlur, onChange } = field;\n  console.log(field);\n\n  const { setFieldValue } = useFormikContext();\n\n  return (\n    <>\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\n      <StyledDatePickerWrapper>\n        <DatePicker\n          selected={meta.value}\n          onChange={date => setFieldValue('date', date)}\n          {...newField}\n          {...props}\n        />\n      </StyledDatePickerWrapper>\n      {meta.touched && meta.error ? (\n        <ErrorMessage className=\"error\">{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nexport default MyDateField;\n"]},"metadata":{},"sourceType":"module"}