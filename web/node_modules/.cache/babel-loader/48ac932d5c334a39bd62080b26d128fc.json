{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/MySelect/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from 'formik';\nimport Select, { components } from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledLabel, ErrorMessage } from '../styles';\nimport StyledIcon from './styles';\nconst customStyles = {\n  control: styles => _objectSpread({}, styles, {\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid #c1c1c1',\n    width: '100%',\n    height: '40px',\n    background: '#fff',\n    fontSize: '15px'\n  })\n};\n\nconst Option = props => {\n  const data = props.data;\n  console.log(data.icon);\n  return React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, data.icon && React.createElement(StyledIcon, {\n    className: \"input-select__icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, data.icon), React.createElement(components.Option, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\n\nconst MySelect = (_ref) => {\n  let label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const _useField = useField(props),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  const _useFormikContext = useFormikContext(),\n        setFieldValue = _useFormikContext.setFieldValue;\n\n  const id = props.id,\n        placeholder = props.placeholder,\n        options = props.options;\n  const name = field.name,\n        value = field.value,\n        onBlur = field.onBlur;\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: id || name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, label), React.createElement(Select, {\n    id: id || name,\n    styles: customStyles,\n    onChange: category => setFieldValue('category', category),\n    name: name,\n    value: value,\n    onBlur: onBlur,\n    placeholder: placeholder,\n    options: options,\n    components: {\n      Option\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nMySelect.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null\n};\nMySelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string\n};\nexport default MySelect;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/MySelect/index.jsx"],"names":["React","PropTypes","useField","useFormikContext","Select","components","StyledLabel","ErrorMessage","StyledIcon","customStyles","control","styles","backgroundColor","borderRadius","border","width","height","background","fontSize","Option","props","data","console","log","icon","display","alignItems","MySelect","label","field","meta","setFieldValue","id","placeholder","options","name","value","onBlur","category","touched","error","defaultProps","propTypes","arrayOf","object","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from 'formik';\nimport Select, { components } from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledLabel, ErrorMessage } from '../styles';\nimport StyledIcon from './styles';\n\nconst customStyles = {\n  control: styles => ({\n    ...styles,\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid #c1c1c1',\n    width: '100%',\n    height: '40px',\n    background: '#fff',\n    fontSize: '15px',\n  }),\n};\n\nconst Option = props => {\n  const { data } = props;\n  console.log(data.icon);\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      {data.icon && (\n        <StyledIcon className=\"input-select__icon\">{data.icon}</StyledIcon>\n      )}\n      <components.Option {...props} />\n    </div>\n  );\n};\n\nconst MySelect = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  const { setFieldValue } = useFormikContext();\n  const { id, placeholder, options } = props;\n  const { name, value, onBlur } = field;\n\n  return (\n    <>\n      <StyledLabel htmlFor={id || name}>{label}</StyledLabel>\n      <Select\n        id={id || name}\n        styles={customStyles}\n        onChange={category => setFieldValue('category', category)}\n        name={name}\n        value={value}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        options={options}\n        components={{ Option }}\n      />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nMySelect.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null,\n};\n\nMySelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport default MySelect;\n"]},"metadata":{},"sourceType":"module"}