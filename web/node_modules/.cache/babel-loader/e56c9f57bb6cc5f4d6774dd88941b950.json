{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/Graphs/Pie/index.jsx\";\nimport React, { useRef } from 'react';\nimport * as d3 from 'd3';\nimport { createPopper } from '@popperjs/core';\nimport { LegendColorBox, LegendTitle, LegendPercentage, LegendItem, PieWrapper } from './styles';\n\nconst Pie = ({\n  data,\n  outerRadius,\n  innerRadius = 0,\n  width,\n  height,\n  legend,\n  colors\n}) => {\n  const graphRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const graphContainer = d3.select(graphRef.current);\n  const tooltip = d3.select(tooltipRef.current);\n  const arcs = d3.pie().value(value => value.value)(data).sort((a, b) => a.data.name.localeCompare(b.data.name));\n  const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n  graphContainer.selectAll('path').data(arcs).enter().append('path').attr('fill', d => {\n    return colors[d.index];\n  }).attr('stroke', 'white').attr('d', arc).on('mouseover', () => {\n    createPopper(d3.event.target, tooltipRef.current, {\n      placement: 'top'\n    });\n    return tooltip.text(d => {\n      console.log(d);\n    });\n  });\n  /*.on('mousemove', function(event) {\n      return tooltip\n        .style('top', d3.event.pageY + 'px')\n        .style('left', d3.event.pageX + 'px');\n    })\n    .on('mouseout', function() {\n      return tooltip.style('visibility', 'hidden');\n    });*/\n\n  return React.createElement(PieWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: graphRef,\n    transform: `translate(${outerRadius} ${outerRadius})`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    ref: tooltipRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"teste\")), legend && React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, arcs.map(arc => React.createElement(LegendItem, {\n    key: arc.data.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(LegendColorBox, {\n    color: colors[arc.index],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(LegendTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, arc.data.name, \": \"), React.createElement(LegendPercentage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, arc.data.value)))));\n};\n\nexport default Pie;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/Graphs/Pie/index.jsx"],"names":["React","useRef","d3","createPopper","LegendColorBox","LegendTitle","LegendPercentage","LegendItem","PieWrapper","Pie","data","outerRadius","innerRadius","width","height","legend","colors","graphRef","tooltipRef","graphContainer","select","current","tooltip","arcs","pie","value","sort","a","b","name","localeCompare","arc","selectAll","enter","append","attr","d","index","on","event","target","placement","text","console","log","map","id"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport * as d3 from 'd3';\nimport { createPopper } from '@popperjs/core';\nimport {\n  LegendColorBox,\n  LegendTitle,\n  LegendPercentage,\n  LegendItem,\n  PieWrapper,\n} from './styles';\n\nconst Pie = ({\n  data,\n  outerRadius,\n  innerRadius = 0,\n  width,\n  height,\n  legend,\n  colors,\n}) => {\n  const graphRef = useRef(null);\n  const tooltipRef = useRef(null);\n\n  const graphContainer = d3.select(graphRef.current);\n  const tooltip = d3.select(tooltipRef.current);\n\n  const arcs = d3\n    .pie()\n    .value(value => value.value)(data)\n    .sort((a, b) => a.data.name.localeCompare(b.data.name));\n\n  const arc = d3\n    .arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n  graphContainer\n    .selectAll('path')\n    .data(arcs)\n    .enter()\n    .append('path')\n    .attr('fill', d => {\n      return colors[d.index];\n    })\n    .attr('stroke', 'white')\n    .attr('d', arc)\n    .on('mouseover', () => {\n      createPopper(d3.event.target, tooltipRef.current, {\n        placement: 'top',\n      });\n      return tooltip.text(d => {\n        console.log(d);\n      });\n    });\n  /*.on('mousemove', function(event) {\n      return tooltip\n        .style('top', d3.event.pageY + 'px')\n        .style('left', d3.event.pageX + 'px');\n    })\n    .on('mouseout', function() {\n      return tooltip.style('visibility', 'hidden');\n    });*/\n\n  return (\n    <PieWrapper>\n      <div>\n        <svg width={width} height={height}>\n          <g\n            ref={graphRef}\n            transform={`translate(${outerRadius} ${outerRadius})`}\n          />\n        </svg>\n        <div ref={tooltipRef}>teste</div>\n      </div>\n      {legend && (\n        <ul>\n          {arcs.map(arc => (\n            <LegendItem key={arc.data.id}>\n              <LegendColorBox color={colors[arc.index]} />\n              <LegendTitle>{arc.data.name}: </LegendTitle>\n              <LegendPercentage>{arc.data.value}</LegendPercentage>\n            </LegendItem>\n          ))}\n        </ul>\n      )}\n    </PieWrapper>\n  );\n};\n\nexport default Pie;\n"]},"metadata":{},"sourceType":"module"}