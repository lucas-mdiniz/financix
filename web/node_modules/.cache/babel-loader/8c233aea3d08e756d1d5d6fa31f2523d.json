{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst useBudgets = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        budgets = _useState2[0],\n        setBudgets = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    async function getCategories() {\n      try {\n        const response = api.get('/categories');\n        console.log(response);\n        const budgetsData = response.data.filter(category => category.type === 'expense' && category.amount).map(budget => {\n          return {\n            name: budget.name,\n            value: parseFloat(budget.amount),\n            id: budget.id\n          };\n        });\n        setBudgets(budgetsData);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getCategories();\n  }, []);\n  return {\n    budgets,\n    setBudgets,\n    loading\n  };\n};\n\nexport default useBudgets;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/hooks/useBudgets.jsx"],"names":["useState","useEffect","api","useBudgets","budgets","setBudgets","loading","setLoading","getCategories","response","get","console","log","budgetsData","data","filter","category","type","amount","map","budget","name","value","parseFloat","id","error"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA,oBACOH,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QAChBI,OADgB;AAAA,QACPC,UADO;;AAAA,qBAEOL,QAAQ,CAAC,IAAD,CAFf;AAAA;AAAA,QAEhBM,OAFgB;AAAA,QAEPC,UAFO;;AAIvBN,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeO,aAAf,GAA+B;AAC7B,UAAI;AACF,cAAMC,QAAQ,GAAGP,GAAG,CAACQ,GAAJ,CAAQ,aAAR,CAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,cAAMI,WAAW,GAAGJ,QAAQ,CAACK,IAAT,CACjBC,MADiB,CACVC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkB,SAAlB,IAA+BD,QAAQ,CAACE,MAD1C,EAEjBC,GAFiB,CAEbC,MAAM,IAAI;AACb,iBAAO;AACLC,YAAAA,IAAI,EAAED,MAAM,CAACC,IADR;AAELC,YAAAA,KAAK,EAAEC,UAAU,CAACH,MAAM,CAACF,MAAR,CAFZ;AAGLM,YAAAA,EAAE,EAAEJ,MAAM,CAACI;AAHN,WAAP;AAKD,SARiB,CAApB;AASAnB,QAAAA,UAAU,CAACQ,WAAD,CAAV;AACAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAdD,CAcE,OAAOkB,KAAP,EAAc;AACdd,QAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD;AACF;;AAEDjB,IAAAA,aAAa;AACd,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,SAAO;AAAEJ,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,GAAP;AACD,CA7BD;;AA+BA,eAAeH,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst useBudgets = () => {\n  const [budgets, setBudgets] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function getCategories() {\n      try {\n        const response = api.get('/categories');\n        console.log(response);\n        const budgetsData = response.data\n          .filter(category => category.type === 'expense' && category.amount)\n          .map(budget => {\n            return {\n              name: budget.name,\n              value: parseFloat(budget.amount),\n              id: budget.id,\n            };\n          });\n        setBudgets(budgetsData);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getCategories();\n  }, []);\n\n  return { budgets, setBudgets, loading };\n};\n\nexport default useBudgets;\n"]},"metadata":{},"sourceType":"module"}