{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst useCategories = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        categories = _useState2[0],\n        setCategories = _useState2[1];\n\n  useEffect(() => {\n    async function getCategories() {\n      try {\n        const response = await api.get('/categories');\n        setCategories(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getCategories();\n  }, []);\n  let expenses = categories.filter(category => category.type === 'expense').map(expense => {\n    expense.label = expense.name;\n  });\n  let earnings = categories.filter(category => category.type === 'earning');\n  expenses.forEach(expense => {\n    Object.assign(expense, {\n      label: expense.name\n    });\n  });\n  console.log(expenses);\n  return [expenses, earnings];\n};\n\nexport default useCategories;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/hooks/useCategories.jsx"],"names":["useState","useEffect","api","useCategories","categories","setCategories","getCategories","response","get","data","error","console","expenses","filter","category","type","map","expense","label","name","earnings","forEach","Object","assign","log"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,oBACUH,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,QACnBI,UADmB;AAAA,QACPC,aADO;;AAG1BJ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeK,aAAf,GAA+B;AAC7B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAQ,aAAR,CAAvB;AACAH,QAAAA,aAAa,CAACE,QAAQ,CAACE,IAAV,CAAb;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;;AAEDJ,IAAAA,aAAa;AACd,GAXQ,EAWN,EAXM,CAAT;AAaA,MAAIM,QAAQ,GAAGR,UAAU,CACtBS,MADY,CACLC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkB,SADzB,EAEZC,GAFY,CAERC,OAAO,IAAI;AACdA,IAAAA,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,IAAxB;AACD,GAJY,CAAf;AAKA,MAAIC,QAAQ,GAAGhB,UAAU,CAACS,MAAX,CAAkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkB,SAAhD,CAAf;AAEAH,EAAAA,QAAQ,CAACS,OAAT,CAAiBJ,OAAO,IAAI;AAC1BK,IAAAA,MAAM,CAACC,MAAP,CAAcN,OAAd,EAAuB;AAAEC,MAAAA,KAAK,EAAED,OAAO,CAACE;AAAjB,KAAvB;AACD,GAFD;AAIAR,EAAAA,OAAO,CAACa,GAAR,CAAYZ,QAAZ;AAEA,SAAO,CAACA,QAAD,EAAWQ,QAAX,CAAP;AACD,CA9BD;;AAgCA,eAAejB,aAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst useCategories = () => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    async function getCategories() {\n      try {\n        const response = await api.get('/categories');\n        setCategories(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getCategories();\n  }, []);\n\n  let expenses = categories\n    .filter(category => category.type === 'expense')\n    .map(expense => {\n      expense.label = expense.name;\n    });\n  let earnings = categories.filter(category => category.type === 'earning');\n\n  expenses.forEach(expense => {\n    Object.assign(expense, { label: expense.name });\n  });\n\n  console.log(expenses);\n\n  return [expenses, earnings];\n};\n\nexport default useCategories;\n"]},"metadata":{},"sourceType":"module"}