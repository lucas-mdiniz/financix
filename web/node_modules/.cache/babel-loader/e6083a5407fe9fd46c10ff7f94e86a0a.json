{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/MySelect/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from 'formik';\nimport Select from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledInput, StyledLabel, ErrorMessage } from '../styles';\n\nconst MySelect = (_ref) => {\n  let label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const _useField = useField(props),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  const _useFormikContext = useFormikContext(),\n        setFieldValue = _useFormikContext.setFieldValue;\n\n  const id = props.id,\n        placeholder = props.placeholder,\n        options = props.options;\n  const name = field.name,\n        value = field.value,\n        onBlur = field.onBlur;\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: id || name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, label), React.createElement(StyledInput, {\n    as: Select,\n    onChange: category => setFieldValue('category', category),\n    name: name,\n    value: value,\n    onBlur: onBlur,\n    placeholder: placeholder,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nMySelect.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null\n};\nMySelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string\n};\nexport default MySelect;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/MySelect/index.jsx"],"names":["React","PropTypes","useField","useFormikContext","Select","StyledInput","StyledLabel","ErrorMessage","MySelect","label","props","field","meta","setFieldValue","id","placeholder","options","name","value","onBlur","category","touched","error","defaultProps","propTypes","arrayOf","object","isRequired","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,QAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,4CAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,WAAvD;;AAEA,MAAMC,QAAQ,GAAG,UAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAAA,oBAClBR,QAAQ,CAACQ,KAAD,CADU;AAAA;AAAA,QACjCC,KADiC;AAAA,QAC1BC,IAD0B;;AAAA,4BAGdT,gBAAgB,EAHF;AAAA,QAGhCU,aAHgC,qBAGhCA,aAHgC;;AAAA,QAIhCC,EAJgC,GAIHJ,KAJG,CAIhCI,EAJgC;AAAA,QAI5BC,WAJ4B,GAIHL,KAJG,CAI5BK,WAJ4B;AAAA,QAIfC,OAJe,GAIHN,KAJG,CAIfM,OAJe;AAAA,QAKhCC,IALgC,GAKRN,KALQ,CAKhCM,IALgC;AAAA,QAK1BC,KAL0B,GAKRP,KALQ,CAK1BO,KAL0B;AAAA,QAKnBC,MALmB,GAKRR,KALQ,CAKnBQ,MALmB;AAOxC,SACE,0CACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEL,EAAE,IAAIG,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCR,KAAnC,CADF,EAEE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAEL,MADN;AAEE,IAAA,QAAQ,EAAEgB,QAAQ,IAAIP,aAAa,CAAC,UAAD,EAAaO,QAAb,CAFrC;AAGE,IAAA,IAAI,EAAEH,IAHR;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,WAAW,EAAEJ,WANf;AAOE,IAAA,OAAO,EAAEC,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWGJ,IAAI,CAACS,OAAL,IAAgBT,IAAI,CAACU,KAArB,GACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeV,IAAI,CAACU,KAApB,CADD,GAEG,IAbN,CADF;AAiBD,CAxBD;;AA0BAd,QAAQ,CAACe,YAAT,GAAwB;AACtBd,EAAAA,KAAK,EAAE,EADe;AAEtBM,EAAAA,WAAW,EAAE,EAFS;AAGtBD,EAAAA,EAAE,EAAE;AAHkB,CAAxB;AAMAN,QAAQ,CAACgB,SAAT,GAAqB;AACnBR,EAAAA,OAAO,EAAEf,SAAS,CAACwB,OAAV,CAAkBxB,SAAS,CAACyB,MAA5B,EAAoCC,UAD1B;AAEnBlB,EAAAA,KAAK,EAAER,SAAS,CAAC2B,MAFE;AAGnBd,EAAAA,EAAE,EAAEb,SAAS,CAAC2B,MAHK;AAInBb,EAAAA,WAAW,EAAEd,SAAS,CAAC2B;AAJJ,CAArB;AAOA,eAAepB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from 'formik';\nimport Select from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledInput, StyledLabel, ErrorMessage } from '../styles';\n\nconst MySelect = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  const { setFieldValue } = useFormikContext();\n  const { id, placeholder, options } = props;\n  const { name, value, onBlur } = field;\n\n  return (\n    <>\n      <StyledLabel htmlFor={id || name}>{label}</StyledLabel>\n      <StyledInput\n        as={Select}\n        onChange={category => setFieldValue('category', category)}\n        name={name}\n        value={value}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        options={options}\n      />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nMySelect.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null,\n};\n\nMySelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport default MySelect;\n"]},"metadata":{},"sourceType":"module"}