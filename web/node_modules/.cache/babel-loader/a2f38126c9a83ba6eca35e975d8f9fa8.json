{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/Graphs/Home/index.jsx\";\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst ReportGraph = () => {\n  const graphRef = useRef(null);\n  const dataset = [{\n    name: 'bar',\n    value: 300,\n    type: 'expense'\n  }, {\n    name: 'shopping',\n    value: 400,\n    type: 'earning'\n  }];\n\n  const xValue = d => d.value;\n\n  const yValue = d => d.name;\n\n  const xScale = d3.scaleLinear().domain([0, d3.max(dataset, xValue)]).range([0, innerWidth]);\n  const yScale = d3.scaleBand().domain(dataset.map(yValue)).range([0, innerHeight]);\n  useEffect(() => {\n    const g = d3.select(graphRef.current);\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    };\n    g.attr('transform', `translate(${margin.left}, ${margin.top})`);\n    g.selectAll('rect').data(dataset).enter().append('rect').attr('y', d => yScale(yValue(d))).attr('width', d => xScale(xValue(d))).attr('height', yScale.bandwidth());\n  });\n  return React.createElement(\"svg\", {\n    height: \"550\",\n    width: \"550\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: graphRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default ReportGraph;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/Graphs/Home/index.jsx"],"names":["React","useRef","useEffect","d3","ReportGraph","graphRef","dataset","name","value","type","xValue","d","yValue","xScale","scaleLinear","domain","max","range","innerWidth","yScale","scaleBand","map","innerHeight","g","select","current","margin","top","right","bottom","left","attr","selectAll","data","enter","append","bandwidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAGJ,MAAM,CAAC,IAAD,CAAvB;AAEA,QAAMK,OAAO,GAAG,CACd;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAE,GAAtB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GADc,EAEd;AAAEF,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,KAAK,EAAE,GAA3B;AAAgCC,IAAAA,IAAI,EAAE;AAAtC,GAFc,CAAhB;;AAKA,QAAMC,MAAM,GAAGC,CAAC,IAAIA,CAAC,CAACH,KAAtB;;AACA,QAAMI,MAAM,GAAGD,CAAC,IAAIA,CAAC,CAACJ,IAAtB;;AAEA,QAAMM,MAAM,GAAGV,EAAE,CACdW,WADY,GAEZC,MAFY,CAEL,CAAC,CAAD,EAAIZ,EAAE,CAACa,GAAH,CAAOV,OAAP,EAAgBI,MAAhB,CAAJ,CAFK,EAGZO,KAHY,CAGN,CAAC,CAAD,EAAIC,UAAJ,CAHM,CAAf;AAKA,QAAMC,MAAM,GAAGhB,EAAE,CACdiB,SADY,GAEZL,MAFY,CAELT,OAAO,CAACe,GAAR,CAAYT,MAAZ,CAFK,EAGZK,KAHY,CAGN,CAAC,CAAD,EAAIK,WAAJ,CAHM,CAAf;AAKApB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,CAAC,GAAGpB,EAAE,CAACqB,MAAH,CAAUnB,QAAQ,CAACoB,OAAnB,CAAV;AACA,UAAMC,MAAM,GAAG;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE,EAAlB;AAAsBC,MAAAA,MAAM,EAAE,EAA9B;AAAkCC,MAAAA,IAAI,EAAE;AAAxC,KAAf;AAEAP,IAAAA,CAAC,CAACQ,IAAF,CAAO,WAAP,EAAqB,aAAYL,MAAM,CAACI,IAAK,KAAIJ,MAAM,CAACC,GAAI,GAA5D;AAEAJ,IAAAA,CAAC,CAACS,SAAF,CAAY,MAAZ,EACGC,IADH,CACQ3B,OADR,EAEG4B,KAFH,GAGGC,MAHH,CAGU,MAHV,EAIGJ,IAJH,CAIQ,GAJR,EAIapB,CAAC,IAAIQ,MAAM,CAACP,MAAM,CAACD,CAAD,CAAP,CAJxB,EAKGoB,IALH,CAKQ,OALR,EAKiBpB,CAAC,IAAIE,MAAM,CAACH,MAAM,CAACC,CAAD,CAAP,CAL5B,EAMGoB,IANH,CAMQ,QANR,EAMkBZ,MAAM,CAACiB,SAAP,EANlB;AAOD,GAbQ,CAAT;AAeA,SACE;AAAK,IAAA,MAAM,EAAC,KAAZ;AAAkB,IAAA,KAAK,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,GAAG,EAAE/B,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAzCD;;AA2CA,eAAeD,WAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst ReportGraph = () => {\n  const graphRef = useRef(null);\n\n  const dataset = [\n    { name: 'bar', value: 300, type: 'expense' },\n    { name: 'shopping', value: 400, type: 'earning' },\n  ];\n\n  const xValue = d => d.value;\n  const yValue = d => d.name;\n\n  const xScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(dataset, xValue)])\n    .range([0, innerWidth]);\n\n  const yScale = d3\n    .scaleBand()\n    .domain(dataset.map(yValue))\n    .range([0, innerHeight]);\n\n  useEffect(() => {\n    const g = d3.select(graphRef.current);\n    const margin = { top: 20, right: 20, bottom: 20, left: 20 };\n\n    g.attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    g.selectAll('rect')\n      .data(dataset)\n      .enter()\n      .append('rect')\n      .attr('y', d => yScale(yValue(d)))\n      .attr('width', d => xScale(xValue(d)))\n      .attr('height', yScale.bandwidth());\n  });\n\n  return (\n    <svg height=\"550\" width=\"550\">\n      <g ref={graphRef} />\n    </svg>\n  );\n};\n\nexport default ReportGraph;\n"]},"metadata":{},"sourceType":"module"}