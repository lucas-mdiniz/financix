{"ast":null,"code":"import _objectSpread from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/AddTransaction/index.jsx\";\nimport React, { useContext, useFormikContext } from 'react';\nimport uuidv4 from 'uuid';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport api from '../../services/api';\nimport { MyCheckbox, MyDateField, MyTextInput, MyTransactionTypeButton, MyTextArea, MyMaskedInput, MySelect } from '../FormComponents';\nimport { InputItem, InputGroup, InputItemCenter } from '../FormComponents/styles';\nimport { StyledFaMinus, StyledFaPlus, StyledCenteredButton } from './styles';\nimport { TransactionsContext } from '../../contexts/TransactionContext';\nimport useCategories from '../../hooks/useCategories';\n\nconst AddTransaction = ({\n  modalClose\n}) => {\n  const _useContext = useContext(TransactionsContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        transactions = _useContext2[0],\n        setTransactions = _useContext2[1];\n\n  const _useCategories = useCategories([]),\n        _useCategories2 = _slicedToArray(_useCategories, 2),\n        expensesCategories = _useCategories2[0],\n        earningsCategories = _useCategories2[1];\n\n  console.log(expensesCategories);\n  const initialFormValues = {\n    amount: '',\n    title: '',\n    description: '',\n    date: new Date(),\n    paid: false,\n    type: 'expense',\n    category: 'Others'\n  };\n  const addTransactionSchema = Yup.object({\n    title: Yup.string().max(15, 'Must be 60 characters or less').required('Required'),\n    amount: Yup.string().required('Required'),\n    date: Yup.date().required('Required'),\n    description: Yup.string().max(15, 'Must be 500 characters or less').required('Required'),\n    paid: Yup.boolean().required('Required'),\n    type: Yup.string().oneOf(['income', 'expense']).required('Required')\n  });\n\n  const handleSubmit = (values, {\n    resetForm\n  }) => {\n    const newTransaction = _objectSpread({}, values, {\n      id: uuidv4()\n    });\n\n    api.post('/transactions', newTransaction);\n    setTransactions([...transactions, newTransaction]);\n    modalClose();\n    resetForm();\n  };\n\n  const numberMask = createNumberMask({\n    allowDecimal: true,\n    prefix: '',\n    thousandsSeparatorSymbol: '.',\n    decimalSymbol: ','\n  });\n  return React.createElement(Formik, {\n    initialValues: initialFormValues,\n    validationSchema: addTransactionSchema,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(InputItemCenter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(MyTransactionTypeButton, {\n    name: \"type\",\n    value: \"expense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(StyledFaMinus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FaMinus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), \"Expense\"), React.createElement(MyTransactionTypeButton, {\n    name: \"type\",\n    value: \"income\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(StyledFaPlus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(FaPlus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), \"Income\")), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(InputItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(MyTextInput, {\n    label: \"Title\",\n    name: \"title\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(InputItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(MySelect, {\n    label: \"Category\",\n    name: \"category\",\n    defaultValue: 'Clothing',\n    options: props.values.type === 'expense' ? expensesCategories : earningsCategories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(InputItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(MyMaskedInput, {\n    mask: numberMask,\n    label: \"Amount\",\n    name: \"amount\",\n    placeholder: \"0.00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(InputItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(MyDateField, {\n    label: \"Date\",\n    name: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))), React.createElement(InputItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(MyTextArea, {\n    label: \"Description\",\n    name: \"description\",\n    type: \"textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), React.createElement(MyCheckbox, {\n    name: \"paid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Paid\"), React.createElement(StyledCenteredButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default AddTransaction;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/AddTransaction/index.jsx"],"names":["React","useContext","useFormikContext","uuidv4","Formik","Form","Yup","createNumberMask","FaPlus","FaMinus","api","MyCheckbox","MyDateField","MyTextInput","MyTransactionTypeButton","MyTextArea","MyMaskedInput","MySelect","InputItem","InputGroup","InputItemCenter","StyledFaMinus","StyledFaPlus","StyledCenteredButton","TransactionsContext","useCategories","AddTransaction","modalClose","transactions","setTransactions","expensesCategories","earningsCategories","console","log","initialFormValues","amount","title","description","date","Date","paid","type","category","addTransactionSchema","object","string","max","required","boolean","oneOf","handleSubmit","values","resetForm","newTransaction","id","post","numberMask","allowDecimal","prefix","thousandsSeparatorSymbol","decimalSymbol","props"],"mappings":"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","sourcesContent":["import React, { useContext, useFormikContext } from 'react';\nimport uuidv4 from 'uuid';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport api from '../../services/api';\nimport {\n  MyCheckbox,\n  MyDateField,\n  MyTextInput,\n  MyTransactionTypeButton,\n  MyTextArea,\n  MyMaskedInput,\n  MySelect,\n} from '../FormComponents';\nimport {\n  InputItem,\n  InputGroup,\n  InputItemCenter,\n} from '../FormComponents/styles';\nimport { StyledFaMinus, StyledFaPlus, StyledCenteredButton } from './styles';\nimport { TransactionsContext } from '../../contexts/TransactionContext';\nimport useCategories from '../../hooks/useCategories';\n\nconst AddTransaction = ({ modalClose }) => {\n  const [transactions, setTransactions] = useContext(TransactionsContext);\n\n  const [expensesCategories, earningsCategories] = useCategories([]);\n\n  console.log(expensesCategories);\n\n  const initialFormValues = {\n    amount: '',\n    title: '',\n    description: '',\n    date: new Date(),\n    paid: false,\n    type: 'expense',\n    category: 'Others',\n  };\n\n  const addTransactionSchema = Yup.object({\n    title: Yup.string()\n      .max(15, 'Must be 60 characters or less')\n      .required('Required'),\n    amount: Yup.string().required('Required'),\n    date: Yup.date().required('Required'),\n    description: Yup.string()\n      .max(15, 'Must be 500 characters or less')\n      .required('Required'),\n    paid: Yup.boolean().required('Required'),\n    type: Yup.string()\n      .oneOf(['income', 'expense'])\n      .required('Required'),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    const newTransaction = { ...values, id: uuidv4() };\n\n    api.post('/transactions', newTransaction);\n    setTransactions([...transactions, newTransaction]);\n    modalClose();\n    resetForm();\n  };\n\n  const numberMask = createNumberMask({\n    allowDecimal: true,\n    prefix: '',\n    thousandsSeparatorSymbol: '.',\n    decimalSymbol: ',',\n  });\n\n  return (\n    <Formik\n      initialValues={initialFormValues}\n      validationSchema={addTransactionSchema}\n      onSubmit={handleSubmit}\n    >\n      {props => (\n        <Form>\n          <InputItemCenter>\n            <MyTransactionTypeButton name=\"type\" value=\"expense\">\n              <StyledFaMinus>\n                <FaMinus />\n              </StyledFaMinus>\n              Expense\n            </MyTransactionTypeButton>\n            <MyTransactionTypeButton name=\"type\" value=\"income\">\n              <StyledFaPlus>\n                <FaPlus />\n              </StyledFaPlus>\n              Income\n            </MyTransactionTypeButton>\n          </InputItemCenter>\n\n          <InputGroup>\n            <InputItem>\n              <MyTextInput label=\"Title\" name=\"title\" type=\"text\" />\n            </InputItem>\n            <InputItem>\n              <MySelect\n                label=\"Category\"\n                name=\"category\"\n                defaultValue={'Clothing'}\n                options={\n                  props.values.type === 'expense'\n                    ? expensesCategories\n                    : earningsCategories\n                }\n              />\n            </InputItem>\n          </InputGroup>\n\n          <InputGroup>\n            <InputItem>\n              <MyMaskedInput\n                mask={numberMask}\n                label=\"Amount\"\n                name=\"amount\"\n                placeholder=\"0.00\"\n              />\n            </InputItem>\n            <InputItem>\n              <MyDateField label=\"Date\" name=\"date\" />\n            </InputItem>\n          </InputGroup>\n\n          <InputItem>\n            <MyTextArea\n              label=\"Description\"\n              name=\"description\"\n              type=\"textarea\"\n            />\n          </InputItem>\n          <MyCheckbox name=\"paid\">Paid</MyCheckbox>\n          <StyledCenteredButton type=\"submit\">Submit</StyledCenteredButton>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddTransaction;\n"]},"metadata":{},"sourceType":"module"}