{"ast":null,"code":"import _objectSpread from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/MyCheckbox/index.jsx\";\nimport React from 'react';\nimport { useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport { ErrorMessage, StyledCheckBox } from '../styles';\n\nconst MyCheckbox = (_ref) => {\n  let children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const _useField = useField(_objectSpread({}, props, {\n    type: 'checkbox'\n  })),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  const placeholder = props.placeholder;\n  const name = field.name,\n        value = field.value,\n        onBlur = field.onBlur,\n        onChange = field.onChange;\n  console.log(props);\n  return React.createElement(React.Fragment, null, React.createElement(StyledCheckBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: onChange,\n    name: name,\n    value: value,\n    onBlur: onBlur,\n    placeholder: placeholder,\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), children), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nMyCheckbox.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null\n};\nMyCheckbox.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string\n};\nexport default MyCheckbox;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/MyCheckbox/index.jsx"],"names":["React","useField","PropTypes","ErrorMessage","StyledCheckBox","MyCheckbox","children","props","type","field","meta","placeholder","name","value","onBlur","onChange","console","log","touched","error","defaultProps","label","id","propTypes","string"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,WAA7C;;AAEA,MAAMC,UAAU,GAAG,UAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAAA,oBACvBN,QAAQ,mBAAMM,KAAN;AAAaC,IAAAA,IAAI,EAAE;AAAnB,KADe;AAAA;AAAA,QACtCC,KADsC;AAAA,QAC/BC,IAD+B;;AAAA,QAGrCC,WAHqC,GAGrBJ,KAHqB,CAGrCI,WAHqC;AAAA,QAIrCC,IAJqC,GAIHH,KAJG,CAIrCG,IAJqC;AAAA,QAI/BC,KAJ+B,GAIHJ,KAJG,CAI/BI,KAJ+B;AAAA,QAIxBC,MAJwB,GAIHL,KAJG,CAIxBK,MAJwB;AAAA,QAIhBC,QAJgB,GAIHN,KAJG,CAIhBM,QAJgB;AAK7CC,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAEA,SACE,0CACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEQ,QADZ;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,WAAW,EAAEH,WALf;AAME,IAAA,IAAI,EAAC,UANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASGL,QATH,CADF,EAYGI,IAAI,CAACQ,OAAL,IAAgBR,IAAI,CAACS,KAArB,GACC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCT,IAAI,CAACS,KAAtC,CADD,GAEG,IAdN,CADF;AAkBD,CAzBD;;AA2BAd,UAAU,CAACe,YAAX,GAA0B;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBV,EAAAA,WAAW,EAAE,EAFW;AAGxBW,EAAAA,EAAE,EAAE;AAHoB,CAA1B;AAMAjB,UAAU,CAACkB,SAAX,GAAuB;AACrBF,EAAAA,KAAK,EAAEnB,SAAS,CAACsB,MADI;AAErBF,EAAAA,EAAE,EAAEpB,SAAS,CAACsB,MAFO;AAGrBb,EAAAA,WAAW,EAAET,SAAS,CAACsB;AAHF,CAAvB;AAMA,eAAenB,UAAf","sourcesContent":["import React from 'react';\nimport { useField } from 'formik';\nimport PropTypes from 'prop-types';\nimport { ErrorMessage, StyledCheckBox } from '../styles';\n\nconst MyCheckbox = ({ children, ...props }) => {\n  const [field, meta] = useField({ ...props, type: 'checkbox' });\n\n  const { placeholder } = props;\n  const { name, value, onBlur, onChange } = field;\n  console.log(props);\n\n  return (\n    <>\n      <StyledCheckBox>\n        <input\n          onChange={onChange}\n          name={name}\n          value={value}\n          onBlur={onBlur}\n          placeholder={placeholder}\n          type=\"checkbox\"\n        />\n        {children}\n      </StyledCheckBox>\n      {meta.touched && meta.error ? (\n        <ErrorMessage className=\"error\">{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nMyCheckbox.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null,\n};\n\nMyCheckbox.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport default MyCheckbox;\n"]},"metadata":{},"sourceType":"module"}