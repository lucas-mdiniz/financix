{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst useCategories = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        expenseCategories = _useState2[0],\n        setExpenseCategories = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        earningCategories = _useState4[0],\n        setEarningCategories = _useState4[1];\n\n  useEffect(() => {\n    async function getCategories() {\n      try {\n        const response = await api.get('/categories');\n        setExpenseCategories(response.data.expense);\n        setEarningCategories(response.data.earning);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getCategories();\n  }, []);\n  expenseCategories.map(categorie => {\n    console.log(categorie);\n  });\n  /*\n  const expenses = categories\n    .filter(category => category.type === 'expense')\n    .map(expense => {\n      const { name, ...expenseValues } = expense;\n      expenseValues.label = name;\n       return expenseValues;\n    });\n   const earnings = categories\n    .filter(category => category.type === 'earning')\n    .map(earning => {\n      const { name, ...earningValues } = earning;\n      earningValues.label = name;\n       return earningValues;\n    });\n    */\n\n  return [[], []];\n};\n\nexport default useCategories;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/hooks/useCategories.jsx"],"names":["useState","useEffect","api","useCategories","expenseCategories","setExpenseCategories","earningCategories","setEarningCategories","getCategories","response","get","data","expense","earning","error","console","map","categorie","log"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,oBACwBH,QAAQ,CAAC,EAAD,CADhC;AAAA;AAAA,QACnBI,iBADmB;AAAA,QACAC,oBADA;;AAAA,qBAEwBL,QAAQ,CAAC,EAAD,CAFhC;AAAA;AAAA,QAEnBM,iBAFmB;AAAA,QAEAC,oBAFA;;AAI1BN,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeO,aAAf,GAA+B;AAC7B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,aAAR,CAAvB;AACAL,QAAAA,oBAAoB,CAACI,QAAQ,CAACE,IAAT,CAAcC,OAAf,CAApB;AACAL,QAAAA,oBAAoB,CAACE,QAAQ,CAACE,IAAT,CAAcE,OAAf,CAApB;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;;AAEDN,IAAAA,aAAa;AACd,GAZQ,EAYN,EAZM,CAAT;AAcAJ,EAAAA,iBAAiB,CAACY,GAAlB,CAAsBC,SAAS,IAAI;AACjCF,IAAAA,OAAO,CAACG,GAAR,CAAYD,SAAZ;AACD,GAFD;AAGA;;;;;;;;;;;;;;;;;AAoBA,SAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AACD,CA1CD;;AA4CA,eAAed,aAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst useCategories = () => {\n  const [expenseCategories, setExpenseCategories] = useState([]);\n  const [earningCategories, setEarningCategories] = useState([]);\n\n  useEffect(() => {\n    async function getCategories() {\n      try {\n        const response = await api.get('/categories');\n        setExpenseCategories(response.data.expense);\n        setEarningCategories(response.data.earning);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getCategories();\n  }, []);\n\n  expenseCategories.map(categorie => {\n    console.log(categorie);\n  });\n  /*\n  const expenses = categories\n    .filter(category => category.type === 'expense')\n    .map(expense => {\n      const { name, ...expenseValues } = expense;\n      expenseValues.label = name;\n\n      return expenseValues;\n    });\n\n  const earnings = categories\n    .filter(category => category.type === 'earning')\n    .map(earning => {\n      const { name, ...earningValues } = earning;\n      earningValues.label = name;\n\n      return earningValues;\n    });\n    */\n\n  return [[], []];\n};\n\nexport default useCategories;\n"]},"metadata":{},"sourceType":"module"}