{"ast":null,"code":"import _objectSpread from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/index.jsx\";\nimport React from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledInput, StyledLabel, StyledDatePickerWrapper, ErrorMessage, StyledRadio, StyledTextArea } from './styles';\n\nconst MyTextInput = (_ref) => {\n  let label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const _useField = useField(props),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: props.id || props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, label), React.createElement(StyledInput, Object.assign({}, field, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nconst MyTextArea = (_ref2) => {\n  let label = _ref2.label,\n      props = _objectWithoutProperties(_ref2, [\"label\"]);\n\n  const _useField3 = useField(props),\n        _useField4 = _slicedToArray(_useField3, 2),\n        field = _useField4[0],\n        meta = _useField4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: props.id || props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, label), React.createElement(StyledTextArea, Object.assign({\n    rows: \"3\"\n  }, field, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nconst MyDateField = (_ref3) => {\n  let label = _ref3.label,\n      props = _objectWithoutProperties(_ref3, [\"label\"]);\n\n  const _useField5 = useField(_objectSpread({}, props, {\n    type: 'date'\n  })),\n        _useField6 = _slicedToArray(_useField5, 2),\n        field = _useField6[0],\n        meta = _useField6[1];\n\n  const _useFormikContext = useFormikContext(),\n        setFieldValue = _useFormikContext.setFieldValue;\n\n  const onChange = field.onChange,\n        newField = _objectWithoutProperties(field, [\"onChange\"]);\n\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: props.id || props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, label), React.createElement(StyledDatePickerWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(DatePicker, Object.assign({\n    selected: meta.value,\n    onChange: date => setFieldValue('date', date)\n  }, newField, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nconst MyCheckbox = (_ref4) => {\n  let children = _ref4.children,\n      props = _objectWithoutProperties(_ref4, [\"children\"]);\n\n  const _useField7 = useField(_objectSpread({}, props, {\n    type: 'checkbox'\n  })),\n        _useField8 = _slicedToArray(_useField7, 2),\n        field = _useField8[0],\n        meta = _useField8[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, field, props, {\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), children), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nconst MyTransactionTypeButton = (_ref5) => {\n  let children = _ref5.children,\n      props = _objectWithoutProperties(_ref5, [\"children\"]);\n\n  const _useField9 = useField(_objectSpread({}, props, {\n    type: 'radio'\n  })),\n        _useField10 = _slicedToArray(_useField9, 2),\n        field = _useField10[0],\n        meta = _useField10[1];\n\n  return React.createElement(StyledRadio, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, field, props, {\n    type: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), children), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nexport { MyCheckbox, MyDateField, MyTextInput, MyTransactionTypeButton, MyTextArea };","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/index.jsx"],"names":["React","useField","useFormikContext","DatePicker","StyledInput","StyledLabel","StyledDatePickerWrapper","ErrorMessage","StyledRadio","StyledTextArea","MyTextInput","label","props","field","meta","id","name","touched","error","MyTextArea","MyDateField","type","setFieldValue","onChange","newField","value","date","MyCheckbox","children","MyTransactionTypeButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  StyledInput,\n  StyledLabel,\n  StyledDatePickerWrapper,\n  ErrorMessage,\n  StyledRadio,\n  StyledTextArea,\n} from './styles';\n\nconst MyTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\n      <StyledInput {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nconst MyTextArea = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\n      <StyledTextArea rows=\"3\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nconst MyDateField = ({ label, ...props }) => {\n  const [field, meta] = useField({ ...props, type: 'date' });\n\n  const { setFieldValue } = useFormikContext();\n  const { onChange, ...newField } = field;\n\n  return (\n    <>\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\n      <StyledDatePickerWrapper>\n        <DatePicker\n          selected={meta.value}\n          onChange={date => setFieldValue('date', date)}\n          {...newField}\n          {...props}\n        />\n      </StyledDatePickerWrapper>\n      {meta.touched && meta.error ? (\n        <ErrorMessage className=\"error\">{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nconst MyCheckbox = ({ children, ...props }) => {\n  const [field, meta] = useField({ ...props, type: 'checkbox' });\n  return (\n    <>\n      <label>\n        <input {...field} {...props} type=\"checkbox\" />\n        {children}\n      </label>\n      {meta.touched && meta.error ? (\n        <ErrorMessage className=\"error\">{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nconst MyTransactionTypeButton = ({ children, ...props }) => {\n  const [field, meta] = useField({ ...props, type: 'radio' });\n  return (\n    <StyledRadio>\n      <label>\n        <input {...field} {...props} type=\"radio\" />\n        {children}\n      </label>\n      {meta.touched && meta.error ? (\n        <ErrorMessage className=\"error\">{meta.error}</ErrorMessage>\n      ) : null}\n    </StyledRadio>\n  );\n};\n\nexport {\n  MyCheckbox,\n  MyDateField,\n  MyTextInput,\n  MyTransactionTypeButton,\n  MyTextArea,\n};\n"]},"metadata":{},"sourceType":"module"}