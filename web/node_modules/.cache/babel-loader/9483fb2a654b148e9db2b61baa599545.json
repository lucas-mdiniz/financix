{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/MySelect/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from 'formik';\nimport Select from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledInput, StyledLabel, ErrorMessage } from '../styles';\n\nconst MySelect = (_ref) => {\n  let label = _ref.label,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"label\", \"children\"]);\n\n  const _useField = useField(props),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  const _useFormikContext = useFormikContext(),\n        setFieldValue = _useFormikContext.setFieldValue;\n\n  const id = props.id,\n        placeholder = props.placeholder,\n        options = props.options;\n  const name = field.name,\n        value = field.value,\n        onBlur = field.onBlur;\n  console.log(options);\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: id || name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, label), React.createElement(StyledInput, {\n    as: Select,\n    onChange: category => setFieldValue('category', category),\n    name: name,\n    value: value,\n    onBlur: onBlur,\n    placeholder: placeholder,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nMySelect.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null\n};\nMySelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string\n};\nexport default MySelect;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/MySelect/index.jsx"],"names":["React","PropTypes","useField","useFormikContext","Select","StyledInput","StyledLabel","ErrorMessage","MySelect","label","children","props","field","meta","setFieldValue","id","placeholder","options","name","value","onBlur","console","log","category","touched","error","defaultProps","propTypes","array","isRequired","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,QAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,4CAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,WAAvD;;AAEA,MAAMC,QAAQ,GAAG,UAAmC;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAAA,oBAC5BT,QAAQ,CAACS,KAAD,CADoB;AAAA;AAAA,QAC3CC,KAD2C;AAAA,QACpCC,IADoC;;AAAA,4BAGxBV,gBAAgB,EAHQ;AAAA,QAG1CW,aAH0C,qBAG1CA,aAH0C;;AAAA,QAI1CC,EAJ0C,GAIbJ,KAJa,CAI1CI,EAJ0C;AAAA,QAItCC,WAJsC,GAIbL,KAJa,CAItCK,WAJsC;AAAA,QAIzBC,OAJyB,GAIbN,KAJa,CAIzBM,OAJyB;AAAA,QAK1CC,IAL0C,GAKlBN,KALkB,CAK1CM,IAL0C;AAAA,QAKpCC,KALoC,GAKlBP,KALkB,CAKpCO,KALoC;AAAA,QAK7BC,MAL6B,GAKlBR,KALkB,CAK7BQ,MAL6B;AAOlDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,SACE,0CACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEF,EAAE,IAAIG,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCT,KAAnC,CADF,EAEE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAEL,MADN;AAEE,IAAA,QAAQ,EAAEmB,QAAQ,IAAIT,aAAa,CAAC,UAAD,EAAaS,QAAb,CAFrC;AAGE,IAAA,IAAI,EAAEL,IAHR;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,WAAW,EAAEJ,WANf;AAOE,IAAA,OAAO,EAAEC,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWGJ,IAAI,CAACW,OAAL,IAAgBX,IAAI,CAACY,KAArB,GACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeZ,IAAI,CAACY,KAApB,CADD,GAEG,IAbN,CADF;AAiBD,CA1BD;;AA4BAjB,QAAQ,CAACkB,YAAT,GAAwB;AACtBjB,EAAAA,KAAK,EAAE,EADe;AAEtBO,EAAAA,WAAW,EAAE,EAFS;AAGtBD,EAAAA,EAAE,EAAE;AAHkB,CAAxB;AAMAP,QAAQ,CAACmB,SAAT,GAAqB;AACnBV,EAAAA,OAAO,EAAEhB,SAAS,CAAC2B,KAAV,CAAgBC,UADN;AAEnBpB,EAAAA,KAAK,EAAER,SAAS,CAAC6B,MAFE;AAGnBf,EAAAA,EAAE,EAAEd,SAAS,CAAC6B,MAHK;AAInBd,EAAAA,WAAW,EAAEf,SAAS,CAAC6B;AAJJ,CAArB;AAOA,eAAetB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from 'formik';\nimport Select from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledInput, StyledLabel, ErrorMessage } from '../styles';\n\nconst MySelect = ({ label, children, ...props }) => {\n  const [field, meta] = useField(props);\n\n  const { setFieldValue } = useFormikContext();\n  const { id, placeholder, options } = props;\n  const { name, value, onBlur } = field;\n\n  console.log(options);\n\n  return (\n    <>\n      <StyledLabel htmlFor={id || name}>{label}</StyledLabel>\n      <StyledInput\n        as={Select}\n        onChange={category => setFieldValue('category', category)}\n        name={name}\n        value={value}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        options={options}\n      />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nMySelect.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null,\n};\n\nMySelect.propTypes = {\n  options: PropTypes.array.isRequired,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport default MySelect;\n"]},"metadata":{},"sourceType":"module"}