{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/Graphs/Pie/index.jsx\";\nimport React, { useRef } from 'react';\nimport * as d3 from 'd3';\nimport Popper from 'popper.js';\nimport { LegendColorBox, LegendTitle, LegendPercentage, LegendItem, PieWrapper } from './styles';\n\nconst Pie = ({\n  data,\n  outerRadius,\n  innerRadius = 0,\n  width,\n  height,\n  legend,\n  colors\n}) => {\n  const graphRef = useRef(null);\n  const graphWrapperRef = useRef(null);\n  const graphContainer = d3.select(graphRef.current);\n  const graphWrapper = d3.select(graphWrapperRef.current);\n  const arcs = d3.pie().value(value => value.value)(data).sort((a, b) => a.data.name.localeCompare(b.data.name));\n  const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n  var popper = new Popper(document.documentElement, div.node(), {\n    placement: 'top',\n    onUpdate: data => {\n      // same as `onCreate` but called on subsequent updates\n      console.log(data);\n    }\n  });\n  graphContainer.selectAll('path').data(arcs).enter().append('path').attr('fill', d => {\n    return colors[d.index];\n  }).attr('stroke', 'white').attr('d', arc).on('mouseover', (data, index, references) => {\n    graphWrapper.style('opacity', 0.9);\n    popper.reference = references[index];\n    popper.update();\n  });\n  graphWrapper.append('div').attr('class', 'tooltip');\n  return React.createElement(PieWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: graphWrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: graphRef,\n    transform: `translate(${outerRadius} ${outerRadius})`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), legend && React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, arcs.map(arc => React.createElement(LegendItem, {\n    key: arc.data.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(LegendColorBox, {\n    color: colors[arc.index],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(LegendTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, arc.data.name, \": \"), React.createElement(LegendPercentage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, arc.data.value)))));\n};\n\nexport default Pie;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/Graphs/Pie/index.jsx"],"names":["React","useRef","d3","Popper","LegendColorBox","LegendTitle","LegendPercentage","LegendItem","PieWrapper","Pie","data","outerRadius","innerRadius","width","height","legend","colors","graphRef","graphWrapperRef","graphContainer","select","current","graphWrapper","arcs","pie","value","sort","a","b","name","localeCompare","arc","popper","document","documentElement","div","node","placement","onUpdate","console","log","selectAll","enter","append","attr","d","index","on","references","style","reference","update","map","id"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport * as d3 from 'd3';\nimport Popper from 'popper.js';\nimport {\n  LegendColorBox,\n  LegendTitle,\n  LegendPercentage,\n  LegendItem,\n  PieWrapper,\n} from './styles';\n\nconst Pie = ({\n  data,\n  outerRadius,\n  innerRadius = 0,\n  width,\n  height,\n  legend,\n  colors,\n}) => {\n  const graphRef = useRef(null);\n  const graphWrapperRef = useRef(null);\n\n  const graphContainer = d3.select(graphRef.current);\n  const graphWrapper = d3.select(graphWrapperRef.current);\n\n  const arcs = d3\n    .pie()\n    .value(value => value.value)(data)\n    .sort((a, b) => a.data.name.localeCompare(b.data.name));\n\n  const arc = d3\n    .arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n  var popper = new Popper(document.documentElement, div.node(), {\n    placement: 'top',\n    onUpdate: data => {\n      // same as `onCreate` but called on subsequent updates\n      console.log(data);\n    },\n  });\n\n  graphContainer\n    .selectAll('path')\n    .data(arcs)\n    .enter()\n    .append('path')\n    .attr('fill', d => {\n      return colors[d.index];\n    })\n    .attr('stroke', 'white')\n    .attr('d', arc)\n    .on('mouseover', (data, index, references) => {\n      graphWrapper.style('opacity', 0.9);\n      popper.reference = references[index];\n      popper.update();\n    });\n\n  graphWrapper.append('div').attr('class', 'tooltip');\n\n  return (\n    <PieWrapper>\n      <div ref={graphWrapperRef}>\n        <svg width={width} height={height}>\n          <g\n            ref={graphRef}\n            transform={`translate(${outerRadius} ${outerRadius})`}\n          />\n        </svg>\n      </div>\n      {legend && (\n        <ul>\n          {arcs.map(arc => (\n            <LegendItem key={arc.data.id}>\n              <LegendColorBox color={colors[arc.index]} />\n              <LegendTitle>{arc.data.name}: </LegendTitle>\n              <LegendPercentage>{arc.data.value}</LegendPercentage>\n            </LegendItem>\n          ))}\n        </ul>\n      )}\n    </PieWrapper>\n  );\n};\n\nexport default Pie;\n"]},"metadata":{},"sourceType":"module"}