{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/Graphs/Pie/index.jsx\";\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'tippy.js/dist/tippy.css';\nimport * as d3 from 'd3';\nimport tippy, { followCursor } from 'tippy.js';\nimport usePie from '../../../hooks/usePie';\nimport { LegendColorBox, LegendTitle, LegendPercentage, LegendItem, PieWrapper } from './styles';\n\nconst Pie = ({\n  data,\n  outerRadius,\n  innerRadius,\n  width,\n  height,\n  legend,\n  colors,\n  tooltip,\n  sort\n}) => {\n  const graphRef = useRef(null);\n  const total = data.reduce((accumulator, currentData) => ({\n    value: accumulator.value + currentData.value\n  }));\n  let arcs = d3.pie();\n\n  if (sort) {\n    arcs = arcs.value(value => value.value)(data);\n  } else arcs = arcs.sort(null).value(value => value.value)(data);\n\n  const pieRadius = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n  /* useEffect(() => {\n    const graphContainer = d3.select(graphRef.current);\n     const arc = graphContainer.selectAll('path').data(arcs, d => d.data.id);\n     arc.join(\n      enter => {\n        const pieToRender = enter\n          .append('path')\n          .attr('fill', d => {\n            return colors[d.index];\n          })\n          .attr('d', pieRadius);\n         if (tooltip) {\n          return pieToRender.each(function creatTolltip(d) {\n            // eslint-disable-next-line no-underscore-dangle\n            const pathReference = d3.select(this)._groups[0][0];\n             tippy(pathReference, {\n              content: `${d.data.name}: ${(\n                (d.data.value / total.value) *\n                100\n              ).toFixed(2)}%`,\n              theme: 'light',\n              arrow: false,\n              followCursor: true,\n              plugins: [followCursor],\n            });\n          });\n        }\n        return pieToRender;\n      },\n      update => {\n        const pieToRender = update\n          .transition()\n          .duration(750)\n          .attr('fill', d => {\n            return colors[d.index];\n          })\n          .attrTween('d', function arcTween(a) {\n            // eslint-disable-next-line no-underscore-dangle\n            const i = d3.interpolate(this._current, a);\n            // eslint-disable-next-line no-underscore-dangle\n            this._current = i(0);\n             return t => pieRadius(i(t));\n          });\n         if (tooltip) {\n          pieToRender.each(function updateTolltip(d) {\n            // eslint-disable-next-line no-underscore-dangle\n            const tippyInstance = d3.select(this)._groups[0][0]._tippy;\n             tippyInstance.setContent(\n              `${d.data.name}: ${((d.data.value / total.value) * 100).toFixed(\n                2\n              )}%`\n            );\n          });\n        }\n         return pieToRender;\n      }\n    );\n  }, [pieRadius, arcs, colors, total.value, tooltip]);*/\n\n  return React.createElement(PieWrapper, {\n    legend: legend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: graphRef,\n    transform: `translate(${outerRadius} ${outerRadius})`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))), legend && React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, arcs.map(currentArc => React.createElement(LegendItem, {\n    key: currentArc.data.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(LegendColorBox, {\n    color: colors[currentArc.index],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(LegendTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, currentArc.data.name, \": \"), React.createElement(LegendPercentage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, currentArc.data.value)))));\n};\n\nPie.defaultProps = {\n  legend: false,\n  innerRadius: 0,\n  tooltip: false,\n  sort: false\n};\nPie.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  outerRadius: PropTypes.number.isRequired,\n  innerRadius: PropTypes.number,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  legend: PropTypes.bool,\n  tooltip: PropTypes.bool,\n  sort: PropTypes.bool,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Pie;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/Graphs/Pie/index.jsx"],"names":["React","useRef","useEffect","PropTypes","d3","tippy","followCursor","usePie","LegendColorBox","LegendTitle","LegendPercentage","LegendItem","PieWrapper","Pie","data","outerRadius","innerRadius","width","height","legend","colors","tooltip","sort","graphRef","total","reduce","accumulator","currentData","value","arcs","pie","pieRadius","arc","map","currentArc","id","index","name","defaultProps","propTypes","arrayOf","object","isRequired","number","bool","string"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'tippy.js/dist/tippy.css';\nimport * as d3 from 'd3';\nimport tippy, { followCursor } from 'tippy.js';\nimport usePie from '../../../hooks/usePie';\nimport {\n  LegendColorBox,\n  LegendTitle,\n  LegendPercentage,\n  LegendItem,\n  PieWrapper,\n} from './styles';\n\nconst Pie = ({\n  data,\n  outerRadius,\n  innerRadius,\n  width,\n  height,\n  legend,\n  colors,\n  tooltip,\n  sort,\n}) => {\n  const graphRef = useRef(null);\n\n  const total = data.reduce((accumulator, currentData) => ({\n    value: accumulator.value + currentData.value,\n  }));\n\n  let arcs = d3.pie();\n\n  if (sort) {\n    arcs = arcs.value(value => value.value)(data);\n  } else arcs = arcs.sort(null).value(value => value.value)(data);\n\n  const pieRadius = d3\n    .arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n  /* useEffect(() => {\n    const graphContainer = d3.select(graphRef.current);\n\n    const arc = graphContainer.selectAll('path').data(arcs, d => d.data.id);\n\n    arc.join(\n      enter => {\n        const pieToRender = enter\n          .append('path')\n          .attr('fill', d => {\n            return colors[d.index];\n          })\n          .attr('d', pieRadius);\n\n        if (tooltip) {\n          return pieToRender.each(function creatTolltip(d) {\n            // eslint-disable-next-line no-underscore-dangle\n            const pathReference = d3.select(this)._groups[0][0];\n\n            tippy(pathReference, {\n              content: `${d.data.name}: ${(\n                (d.data.value / total.value) *\n                100\n              ).toFixed(2)}%`,\n              theme: 'light',\n              arrow: false,\n              followCursor: true,\n              plugins: [followCursor],\n            });\n          });\n        }\n        return pieToRender;\n      },\n      update => {\n        const pieToRender = update\n          .transition()\n          .duration(750)\n          .attr('fill', d => {\n            return colors[d.index];\n          })\n          .attrTween('d', function arcTween(a) {\n            // eslint-disable-next-line no-underscore-dangle\n            const i = d3.interpolate(this._current, a);\n            // eslint-disable-next-line no-underscore-dangle\n            this._current = i(0);\n\n            return t => pieRadius(i(t));\n          });\n\n        if (tooltip) {\n          pieToRender.each(function updateTolltip(d) {\n            // eslint-disable-next-line no-underscore-dangle\n            const tippyInstance = d3.select(this)._groups[0][0]._tippy;\n\n            tippyInstance.setContent(\n              `${d.data.name}: ${((d.data.value / total.value) * 100).toFixed(\n                2\n              )}%`\n            );\n          });\n        }\n\n        return pieToRender;\n      }\n    );\n  }, [pieRadius, arcs, colors, total.value, tooltip]);*/\n\n  return (\n    <PieWrapper legend={legend}>\n      <div>\n        <svg width={width} height={height}>\n          <g\n            ref={graphRef}\n            transform={`translate(${outerRadius} ${outerRadius})`}\n          />\n        </svg>\n      </div>\n      {legend && (\n        <ul>\n          {arcs.map(currentArc => (\n            <LegendItem key={currentArc.data.id}>\n              <LegendColorBox color={colors[currentArc.index]} />\n              <LegendTitle>{currentArc.data.name}: </LegendTitle>\n              <LegendPercentage>{currentArc.data.value}</LegendPercentage>\n            </LegendItem>\n          ))}\n        </ul>\n      )}\n    </PieWrapper>\n  );\n};\n\nPie.defaultProps = {\n  legend: false,\n  innerRadius: 0,\n  tooltip: false,\n  sort: false,\n};\n\nPie.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  outerRadius: PropTypes.number.isRequired,\n  innerRadius: PropTypes.number,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  legend: PropTypes.bool,\n  tooltip: PropTypes.bool,\n  sort: PropTypes.bool,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Pie;\n"]},"metadata":{},"sourceType":"module"}