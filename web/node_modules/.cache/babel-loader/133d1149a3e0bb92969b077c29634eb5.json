{"ast":null,"code":"import _objectSpread from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/BudgetsList/index.jsx\";\nimport React from 'react';\nimport PropType from 'prop-types';\nimport Pie from '../Graphs/Pie';\nimport useTransactions from '../../hooks/useTransactions';\nimport { BudgetWrapper, BudgetDetailsWrapper, BudgetDetailsTitle, BudgetDetailsContent, BudgetData, BudgetPercentage } from './styles'; // finalizar e revisar este componente, o useTransactions e o Pie\n\nconst BudgetList = ({\n  data\n}) => {\n  const _useTransactions = useTransactions(),\n        _useTransactions2 = _slicedToArray(_useTransactions, 2),\n        transactions = _useTransactions2[0],\n        loading = _useTransactions2[1];\n\n  const budgets = [];\n  data.forEach(budget => {\n    const _transactions$filter = transactions.filter(transaction => transaction.category === budget.id),\n          _transactions$filter2 = _slicedToArray(_transactions$filter, 1),\n          budgetAndExpense = _transactions$filter2[0];\n\n    console.log(budgetAndExpense);\n\n    if (budgetAndExpense) {\n      budgets.push([{\n        name: budgetAndExpense.title,\n        value: parseFloat(budgetAndExpense.amount),\n        id: budgetAndExpense.id\n      }, _objectSpread({}, budget, {\n        value: budget.value - parseFloat(budgetAndExpense.amount)\n      })]);\n    }\n  });\n  const colors = ['#ff8300', '#ccc'];\n  return loading ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"teste\") : budgets.map(budget => React.createElement(BudgetWrapper, {\n    key: budget[1].id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(BudgetData, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: budget,\n    width: 50,\n    height: 50,\n    innerRadius: 15,\n    outerRadius: 25,\n    colors: colors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(BudgetDetailsWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(BudgetDetailsTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, budget[1].name), React.createElement(BudgetDetailsContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Budget: R$ \", budget[1].value + budget[0].value), React.createElement(BudgetDetailsContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Spent: R$ \", budget[0].value))), React.createElement(BudgetPercentage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, (budget[0].value / (budget[0].value + budget[1].value) * 100).toFixed(0), \"%\")));\n};\n\nBudgetList.defaultProps = {\n  data: {}\n};\nBudgetList.propTypes = {\n  data: PropType.arrayOf(PropType.object)\n};\nexport default BudgetList;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/BudgetsList/index.jsx"],"names":["React","PropType","Pie","useTransactions","BudgetWrapper","BudgetDetailsWrapper","BudgetDetailsTitle","BudgetDetailsContent","BudgetData","BudgetPercentage","BudgetList","data","transactions","loading","budgets","forEach","budget","filter","transaction","category","id","budgetAndExpense","console","log","push","name","title","value","parseFloat","amount","colors","map","toFixed","defaultProps","propTypes","arrayOf","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropType from 'prop-types';\nimport Pie from '../Graphs/Pie';\nimport useTransactions from '../../hooks/useTransactions';\nimport {\n  BudgetWrapper,\n  BudgetDetailsWrapper,\n  BudgetDetailsTitle,\n  BudgetDetailsContent,\n  BudgetData,\n  BudgetPercentage,\n} from './styles';\n\n// finalizar e revisar este componente, o useTransactions e o Pie\n\nconst BudgetList = ({ data }) => {\n  const [transactions, loading] = useTransactions();\n  const budgets = [];\n\n  data.forEach(budget => {\n    const [budgetAndExpense] = transactions.filter(\n      transaction => transaction.category === budget.id\n    );\n\n    console.log(budgetAndExpense);\n\n    if (budgetAndExpense) {\n      budgets.push([\n        {\n          name: budgetAndExpense.title,\n          value: parseFloat(budgetAndExpense.amount),\n          id: budgetAndExpense.id,\n        },\n        {\n          ...budget,\n          value: budget.value - parseFloat(budgetAndExpense.amount),\n        },\n      ]);\n    }\n  });\n\n  const colors = ['#ff8300', '#ccc'];\n  return loading ? (\n    <p>teste</p>\n  ) : (\n    budgets.map(budget => (\n      <BudgetWrapper key={budget[1].id}>\n        <BudgetData>\n          <Pie\n            data={budget}\n            width={50}\n            height={50}\n            innerRadius={15}\n            outerRadius={25}\n            colors={colors}\n          />\n          <BudgetDetailsWrapper>\n            <BudgetDetailsTitle>{budget[1].name}</BudgetDetailsTitle>\n            <BudgetDetailsContent>\n              Budget: R$ {budget[1].value + budget[0].value}\n            </BudgetDetailsContent>\n            <BudgetDetailsContent>\n              Spent: R$ {budget[0].value}\n            </BudgetDetailsContent>\n          </BudgetDetailsWrapper>\n        </BudgetData>\n        <BudgetPercentage>\n          {(\n            (budget[0].value / (budget[0].value + budget[1].value)) *\n            100\n          ).toFixed(0)}\n          %\n        </BudgetPercentage>\n      </BudgetWrapper>\n    ))\n  );\n};\n\nBudgetList.defaultProps = {\n  data: {},\n};\n\nBudgetList.propTypes = {\n  data: PropType.arrayOf(PropType.object),\n};\n\nexport default BudgetList;\n"]},"metadata":{},"sourceType":"module"}