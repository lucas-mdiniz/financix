{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/Graphs/Pie/index.jsx\";\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'tippy.js/dist/tippy.css';\nimport * as d3 from 'd3';\nimport tippy, { followCursor } from 'tippy.js';\nimport { LegendColorBox, LegendTitle, LegendPercentage, LegendItem, PieWrapper } from './styles';\n\nconst Pie = ({\n  data,\n  outerRadius,\n  innerRadius,\n  width,\n  height,\n  legend,\n  colors,\n  tooltip,\n  sort\n}) => {\n  const graphRef = useRef(null);\n  const total = data.reduce((accumulator, currentData) => ({\n    value: accumulator.value + currentData.value\n  }));\n  const arcs = d3.pie().sort(null).value(value => value.value)(data);\n  const pieRadius = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n  useEffect(() => {\n    const graphContainer = d3.select(graphRef.current);\n    const arc = graphContainer.selectAll('path').data(arcs, d => d.data.id);\n    arc.join(enter => {\n      const pieToRender = enter.append('path').attr('fill', d => {\n        return colors[d.index];\n      }).attr('d', pieRadius);\n\n      if (tooltip) {\n        return pieToRender.each(function creatTolltip(d) {\n          // eslint-disable-next-line no-underscore-dangle\n          const pathReference = d3.select(this)._groups[0][0];\n\n          tippy(pathReference, {\n            content: `${d.data.name}: ${(d.data.value / total.value * 100).toFixed(2)}%`,\n            theme: 'light',\n            arrow: false,\n            followCursor: true,\n            plugins: [followCursor]\n          });\n        });\n      }\n\n      return pieToRender;\n    }, update => {\n      const pieToRender = update.transition().duration(750).attr('fill', d => {\n        return colors[d.index];\n      }).attrTween('d', function arcTween(a) {\n        // eslint-disable-next-line no-underscore-dangle\n        const i = d3.interpolate(this._current, a); // eslint-disable-next-line no-underscore-dangle\n\n        this._current = i(0);\n        return t => pieRadius(i(t));\n      });\n\n      if (tooltip) {\n        pieToRender.each(function updateTolltip(d) {\n          // eslint-disable-next-line no-underscore-dangle\n          const tippyInstance = d3.select(this)._groups[0][0]._tippy;\n\n          tippyInstance.setContent(`${d.data.name}: ${(d.data.value / total.value * 100).toFixed(2)}%`);\n        });\n      }\n\n      return pieToRender;\n    });\n  }, [pieRadius, arcs, colors, total.value, tooltip]);\n  return React.createElement(PieWrapper, {\n    legend: legend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: graphRef,\n    transform: `translate(${outerRadius} ${outerRadius})`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))), legend && React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, arcs.map(currentArc => React.createElement(LegendItem, {\n    key: currentArc.data.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(LegendColorBox, {\n    color: colors[currentArc.index],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(LegendTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, currentArc.data.name, \": \"), React.createElement(LegendPercentage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, currentArc.data.value)))));\n};\n\nPie.defaultProps = {\n  legend: false,\n  innerRadius: 0,\n  tooltip: false\n};\nPie.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  outerRadius: PropTypes.number.isRequired,\n  innerRadius: PropTypes.number,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  legend: PropTypes.bool,\n  tooltip: PropTypes.bool,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Pie;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/Graphs/Pie/index.jsx"],"names":["React","useRef","useEffect","PropTypes","d3","tippy","followCursor","LegendColorBox","LegendTitle","LegendPercentage","LegendItem","PieWrapper","Pie","data","outerRadius","innerRadius","width","height","legend","colors","tooltip","sort","graphRef","total","reduce","accumulator","currentData","value","arcs","pie","pieRadius","arc","graphContainer","select","current","selectAll","d","id","join","enter","pieToRender","append","attr","index","each","creatTolltip","pathReference","_groups","content","name","toFixed","theme","arrow","plugins","update","transition","duration","attrTween","arcTween","a","i","interpolate","_current","t","updateTolltip","tippyInstance","_tippy","setContent","map","currentArc","defaultProps","propTypes","arrayOf","object","isRequired","number","bool","string"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'tippy.js/dist/tippy.css';\nimport * as d3 from 'd3';\nimport tippy, { followCursor } from 'tippy.js';\nimport {\n  LegendColorBox,\n  LegendTitle,\n  LegendPercentage,\n  LegendItem,\n  PieWrapper,\n} from './styles';\n\nconst Pie = ({\n  data,\n  outerRadius,\n  innerRadius,\n  width,\n  height,\n  legend,\n  colors,\n  tooltip,\n  sort,\n}) => {\n  const graphRef = useRef(null);\n\n  const total = data.reduce((accumulator, currentData) => ({\n    value: accumulator.value + currentData.value,\n  }));\n\n  const arcs = d3\n    .pie()\n    .sort(null)\n    .value(value => value.value)(data);\n\n  const pieRadius = d3\n    .arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n  useEffect(() => {\n    const graphContainer = d3.select(graphRef.current);\n\n    const arc = graphContainer.selectAll('path').data(arcs, d => d.data.id);\n\n    arc.join(\n      enter => {\n        const pieToRender = enter\n          .append('path')\n          .attr('fill', d => {\n            return colors[d.index];\n          })\n          .attr('d', pieRadius);\n\n        if (tooltip) {\n          return pieToRender.each(function creatTolltip(d) {\n            // eslint-disable-next-line no-underscore-dangle\n            const pathReference = d3.select(this)._groups[0][0];\n\n            tippy(pathReference, {\n              content: `${d.data.name}: ${(\n                (d.data.value / total.value) *\n                100\n              ).toFixed(2)}%`,\n              theme: 'light',\n              arrow: false,\n              followCursor: true,\n              plugins: [followCursor],\n            });\n          });\n        }\n        return pieToRender;\n      },\n      update => {\n        const pieToRender = update\n          .transition()\n          .duration(750)\n          .attr('fill', d => {\n            return colors[d.index];\n          })\n          .attrTween('d', function arcTween(a) {\n            // eslint-disable-next-line no-underscore-dangle\n            const i = d3.interpolate(this._current, a);\n            // eslint-disable-next-line no-underscore-dangle\n            this._current = i(0);\n\n            return t => pieRadius(i(t));\n          });\n\n        if (tooltip) {\n          pieToRender.each(function updateTolltip(d) {\n            // eslint-disable-next-line no-underscore-dangle\n            const tippyInstance = d3.select(this)._groups[0][0]._tippy;\n\n            tippyInstance.setContent(\n              `${d.data.name}: ${((d.data.value / total.value) * 100).toFixed(\n                2\n              )}%`\n            );\n          });\n        }\n\n        return pieToRender;\n      }\n    );\n  }, [pieRadius, arcs, colors, total.value, tooltip]);\n\n  return (\n    <PieWrapper legend={legend}>\n      <div>\n        <svg width={width} height={height}>\n          <g\n            ref={graphRef}\n            transform={`translate(${outerRadius} ${outerRadius})`}\n          />\n        </svg>\n      </div>\n      {legend && (\n        <ul>\n          {arcs.map(currentArc => (\n            <LegendItem key={currentArc.data.id}>\n              <LegendColorBox color={colors[currentArc.index]} />\n              <LegendTitle>{currentArc.data.name}: </LegendTitle>\n              <LegendPercentage>{currentArc.data.value}</LegendPercentage>\n            </LegendItem>\n          ))}\n        </ul>\n      )}\n    </PieWrapper>\n  );\n};\n\nPie.defaultProps = {\n  legend: false,\n  innerRadius: 0,\n  tooltip: false,\n};\n\nPie.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  outerRadius: PropTypes.number.isRequired,\n  innerRadius: PropTypes.number,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  legend: PropTypes.bool,\n  tooltip: PropTypes.bool,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Pie;\n"]},"metadata":{},"sourceType":"module"}