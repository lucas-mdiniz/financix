{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/MyMaskedInput/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport MaskedInput from 'react-text-mask';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledInput, StyledLabel, ErrorMessage } from '../styles';\n\nconst MyMaskedInput = (_ref) => {\n  let label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const _useField = useField(props),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  const id = props.id,\n        placeholder = props.placeholder,\n        mask = props.mask;\n  const name = field.name,\n        value = field.value,\n        onChange = field.onChange,\n        onBlur = field.onBlur;\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: id || name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, label), React.createElement(StyledInput, {\n    as: MaskedInput,\n    name: name,\n    value: value,\n    onChange: onChange,\n    onBlur: onBlur,\n    placeholder: placeholder,\n    mask: mask,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nMyMaskedInput.defaultProps = {\n  label: '',\n  placeholder: ''\n};\nMyMaskedInput.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: propTypes.string,\n  mask: PropTypes.oneOfType([PropTypes.func, PropTypes.array]).isRequired\n};\nexport default MyMaskedInput;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/MyMaskedInput/index.jsx"],"names":["React","PropTypes","useField","MaskedInput","StyledInput","StyledLabel","ErrorMessage","MyMaskedInput","label","props","field","meta","id","placeholder","mask","name","value","onChange","onBlur","touched","error","defaultProps","propTypes","string","oneOfType","func","array","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAO,4CAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,WAAvD;;AAEA,MAAMC,aAAa,GAAG,UAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAAA,oBACvBP,QAAQ,CAACO,KAAD,CADe;AAAA;AAAA,QACtCC,KADsC;AAAA,QAC/BC,IAD+B;;AAAA,QAErCC,EAFqC,GAEXH,KAFW,CAErCG,EAFqC;AAAA,QAEjCC,WAFiC,GAEXJ,KAFW,CAEjCI,WAFiC;AAAA,QAEpBC,IAFoB,GAEXL,KAFW,CAEpBK,IAFoB;AAAA,QAGrCC,IAHqC,GAGHL,KAHG,CAGrCK,IAHqC;AAAA,QAG/BC,KAH+B,GAGHN,KAHG,CAG/BM,KAH+B;AAAA,QAGxBC,QAHwB,GAGHP,KAHG,CAGxBO,QAHwB;AAAA,QAGdC,MAHc,GAGHR,KAHG,CAGdQ,MAHc;AAK7C,SACE,0CACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEN,EAAE,IAAIG,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCP,KAAnC,CADF,EAEE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAEL,WADN;AAEE,IAAA,IAAI,EAAEY,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,WAAW,EAAEL,WANf;AAOE,IAAA,IAAI,EAAEC,IAPR;AAQE,IAAA,IAAI,EAAC,MARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAYGH,IAAI,CAACQ,OAAL,IAAgBR,IAAI,CAACS,KAArB,GACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeT,IAAI,CAACS,KAApB,CADD,GAEG,IAdN,CADF;AAkBD,CAvBD;;AAyBAb,aAAa,CAACc,YAAd,GAA6B;AAC3Bb,EAAAA,KAAK,EAAE,EADoB;AAE3BK,EAAAA,WAAW,EAAE;AAFc,CAA7B;AAKAN,aAAa,CAACe,SAAd,GAA0B;AACxBd,EAAAA,KAAK,EAAEP,SAAS,CAACsB,MADO;AAExBX,EAAAA,EAAE,EAAEX,SAAS,CAACsB,MAFU;AAGxBV,EAAAA,WAAW,EAAES,SAAS,CAACC,MAHC;AAIxBT,EAAAA,IAAI,EAAEb,SAAS,CAACuB,SAAV,CAAoB,CAACvB,SAAS,CAACwB,IAAX,EAAiBxB,SAAS,CAACyB,KAA3B,CAApB,EAAuDC;AAJrC,CAA1B;AAOA,eAAepB,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport MaskedInput from 'react-text-mask';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledInput, StyledLabel, ErrorMessage } from '../styles';\n\nconst MyMaskedInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const { id, placeholder, mask } = props;\n  const { name, value, onChange, onBlur } = field;\n\n  return (\n    <>\n      <StyledLabel htmlFor={id || name}>{label}</StyledLabel>\n      <StyledInput\n        as={MaskedInput}\n        name={name}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        mask={mask}\n        type=\"text\"\n      />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nMyMaskedInput.defaultProps = {\n  label: '',\n  placeholder: '',\n};\n\nMyMaskedInput.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: propTypes.string,\n  mask: PropTypes.oneOfType([PropTypes.func, PropTypes.array]).isRequired,\n};\n\nexport default MyMaskedInput;\n"]},"metadata":{},"sourceType":"module"}