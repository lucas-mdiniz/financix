{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/MyMaskedInput/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport MaskedInput from 'react-text-mask';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledInput, StyledLabel, ErrorMessage } from '../styles';\n\nconst MyMaskedInput = (_ref) => {\n  let label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const _useField = useField(props),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  const id = props.id,\n        placeholder = props.placeholder,\n        mask = props.mask;\n  console.log(props);\n  const name = field.name,\n        value = field.value,\n        onChange = field.onChange,\n        onBlur = field.onBlur;\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: id || name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, label), React.createElement(StyledInput, {\n    as: MaskedInput,\n    name: name,\n    value: value,\n    onChange: onChange,\n    onBlur: onBlur,\n    placeholder: placeholder,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nMyMaskedInput.defaultProps = {\n  label: ''\n};\nMyMaskedInput.propTypes = {\n  label: PropTypes.string\n};\nexport default MyMaskedInput;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/MyMaskedInput/index.jsx"],"names":["React","PropTypes","useField","MaskedInput","StyledInput","StyledLabel","ErrorMessage","MyMaskedInput","label","props","field","meta","id","placeholder","mask","console","log","name","value","onChange","onBlur","touched","error","defaultProps","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAO,4CAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,WAAvD;;AAEA,MAAMC,aAAa,GAAG,UAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAAA,oBACvBP,QAAQ,CAACO,KAAD,CADe;AAAA;AAAA,QACtCC,KADsC;AAAA,QAC/BC,IAD+B;;AAAA,QAErCC,EAFqC,GAEXH,KAFW,CAErCG,EAFqC;AAAA,QAEjCC,WAFiC,GAEXJ,KAFW,CAEjCI,WAFiC;AAAA,QAEpBC,IAFoB,GAEXL,KAFW,CAEpBK,IAFoB;AAG7CC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAH6C,QAIrCQ,IAJqC,GAIHP,KAJG,CAIrCO,IAJqC;AAAA,QAI/BC,KAJ+B,GAIHR,KAJG,CAI/BQ,KAJ+B;AAAA,QAIxBC,QAJwB,GAIHT,KAJG,CAIxBS,QAJwB;AAAA,QAIdC,MAJc,GAIHV,KAJG,CAIdU,MAJc;AAM7C,SACE,0CACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAER,EAAE,IAAIK,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCT,KAAnC,CADF,EAEE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAEL,WADN;AAEE,IAAA,IAAI,EAAEc,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,WAAW,EAAEP,WANf;AAOE,IAAA,IAAI,EAAC,MAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWGF,IAAI,CAACU,OAAL,IAAgBV,IAAI,CAACW,KAArB,GACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeX,IAAI,CAACW,KAApB,CADD,GAEG,IAbN,CADF;AAiBD,CAvBD;;AAyBAf,aAAa,CAACgB,YAAd,GAA6B;AAC3Bf,EAAAA,KAAK,EAAE;AADoB,CAA7B;AAIAD,aAAa,CAACiB,SAAd,GAA0B;AACxBhB,EAAAA,KAAK,EAAEP,SAAS,CAACwB;AADO,CAA1B;AAIA,eAAelB,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport MaskedInput from 'react-text-mask';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledInput, StyledLabel, ErrorMessage } from '../styles';\n\nconst MyMaskedInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const { id, placeholder, mask } = props;\n  console.log(props);\n  const { name, value, onChange, onBlur } = field;\n\n  return (\n    <>\n      <StyledLabel htmlFor={id || name}>{label}</StyledLabel>\n      <StyledInput\n        as={MaskedInput}\n        name={name}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        type=\"text\"\n      />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nMyMaskedInput.defaultProps = {\n  label: '',\n};\n\nMyMaskedInput.propTypes = {\n  label: PropTypes.string,\n};\n\nexport default MyMaskedInput;\n"]},"metadata":{},"sourceType":"module"}