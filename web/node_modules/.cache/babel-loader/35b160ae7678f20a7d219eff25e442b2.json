{"ast":null,"code":"import _objectSpread from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/AddTransaction/index.jsx\";\nimport React, { useContext } from 'react';\nimport uuidv4 from 'uuid';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport api from '../../services/api';\nimport { MyCheckbox, MyDateField, MyTextInput, MyTransactionTypeButton, MyTextArea } from '../FormComponents';\nimport { InputItem, InputGroup, InputItemCenter } from '../FormComponents/styles';\nimport { StyledFaMinus, StyledFaPlus, StyledCenteredButton } from './styles';\nimport { TransactionsContext } from '../../contexts/TransactionContext';\n\nconst AddTransaction = ({\n  modalClose\n}) => {\n  const _useContext = useContext(TransactionsContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        transactions = _useContext2[0],\n        setTransactions = _useContext2[1];\n\n  return React.createElement(Formik, {\n    initialValues: {\n      amount: '',\n      title: '',\n      description: '',\n      date: new Date(),\n      paid: false,\n      type: 'expense'\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().max(15, 'Must be 60 characters or less').required('Required'),\n      amount: Yup.number('must be a number').required('Required').typeError('The amount must be a number'),\n      date: Yup.date().required('Required'),\n      description: Yup.string().max(15, 'Must be 500 characters or less').required('Required'),\n      paid: Yup.boolean().required('Required'),\n      type: Yup.string().oneOf(['income', 'expense']).required('Required')\n    }),\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      const newTransaction = _objectSpread({}, values, {\n        id: uuidv4()\n      });\n\n      api.post('/transactions', newTransaction);\n      setTransactions([...transactions, newTransaction]);\n      modalClose();\n      resetForm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(InputItemCenter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(MyTransactionTypeButton, {\n    name: \"type\",\n    value: \"expense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(StyledFaMinus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(FaMinus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), \"Expense\"), React.createElement(MyTransactionTypeButton, {\n    name: \"type\",\n    value: \"income\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(StyledFaPlus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FaPlus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), \"Income\")), React.createElement(InputItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(MyTextInput, {\n    label: \"Title\",\n    name: \"title\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(InputItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(MyTextInput, {\n    label: \"Amount\",\n    name: \"amount\",\n    type: \"text\",\n    placeholder: \"0,00\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(InputItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(MyDateField, {\n    label: \"Date\",\n    name: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))), React.createElement(InputItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(MyTextArea, {\n    label: \"Description\",\n    name: \"description\",\n    type: \"textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(MyCheckbox, {\n    name: \"paid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Paid\"), React.createElement(StyledCenteredButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default AddTransaction;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/AddTransaction/index.jsx"],"names":["React","useContext","uuidv4","Formik","Form","Yup","FaPlus","FaMinus","api","MyCheckbox","MyDateField","MyTextInput","MyTransactionTypeButton","MyTextArea","InputItem","InputGroup","InputItemCenter","StyledFaMinus","StyledFaPlus","StyledCenteredButton","TransactionsContext","AddTransaction","modalClose","transactions","setTransactions","amount","title","description","date","Date","paid","type","object","string","max","required","number","typeError","boolean","oneOf","values","resetForm","newTransaction","id","post"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport uuidv4 from 'uuid';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nimport api from '../../services/api';\nimport {\n  MyCheckbox,\n  MyDateField,\n  MyTextInput,\n  MyTransactionTypeButton,\n  MyTextArea,\n} from '../FormComponents';\nimport {\n  InputItem,\n  InputGroup,\n  InputItemCenter,\n} from '../FormComponents/styles';\nimport { StyledFaMinus, StyledFaPlus, StyledCenteredButton } from './styles';\nimport { TransactionsContext } from '../../contexts/TransactionContext';\n\nconst AddTransaction = ({ modalClose }) => {\n  const [transactions, setTransactions] = useContext(TransactionsContext);\n\n  return (\n    <Formik\n      initialValues={{\n        amount: '',\n        title: '',\n        description: '',\n        date: new Date(),\n        paid: false,\n        type: 'expense',\n      }}\n      validationSchema={Yup.object({\n        title: Yup.string()\n          .max(15, 'Must be 60 characters or less')\n          .required('Required'),\n        amount: Yup.number('must be a number')\n          .required('Required')\n          .typeError('The amount must be a number'),\n        date: Yup.date().required('Required'),\n        description: Yup.string()\n          .max(15, 'Must be 500 characters or less')\n          .required('Required'),\n        paid: Yup.boolean().required('Required'),\n        type: Yup.string()\n          .oneOf(['income', 'expense'])\n          .required('Required'),\n      })}\n      onSubmit={(values, { resetForm }) => {\n        const newTransaction = { ...values, id: uuidv4() };\n\n        api.post('/transactions', newTransaction);\n        setTransactions([...transactions, newTransaction]);\n        modalClose();\n        resetForm();\n      }}\n    >\n      <Form>\n        <InputItemCenter>\n          <MyTransactionTypeButton name=\"type\" value=\"expense\">\n            <StyledFaMinus>\n              <FaMinus />\n            </StyledFaMinus>\n            Expense\n          </MyTransactionTypeButton>\n          <MyTransactionTypeButton name=\"type\" value=\"income\">\n            <StyledFaPlus>\n              <FaPlus />\n            </StyledFaPlus>\n            Income\n          </MyTransactionTypeButton>\n        </InputItemCenter>\n        <InputItem>\n          <MyTextInput label=\"Title\" name=\"title\" type=\"text\" />\n        </InputItem>\n        <InputGroup>\n          <InputItem>\n            <MyTextInput\n              label=\"Amount\"\n              name=\"amount\"\n              type=\"text\"\n              placeholder=\"0,00\"\n            />\n          </InputItem>\n          <InputItem>\n            <MyDateField label=\"Date\" name=\"date\" />\n          </InputItem>\n        </InputGroup>\n\n        <InputItem>\n          <MyTextArea label=\"Description\" name=\"description\" type=\"textarea\" />\n        </InputItem>\n        <MyCheckbox name=\"paid\">Paid</MyCheckbox>\n        <StyledCenteredButton type=\"submit\">Submit</StyledCenteredButton>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default AddTransaction;\n"]},"metadata":{},"sourceType":"module"}