{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/MySelect/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from 'formik';\nimport Select from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledLabel, ErrorMessage } from '../styles';\nimport * as ReactIcons from 'react-icons/fa';\nconst customStyles = {\n  control: styles => _objectSpread({}, styles, {\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid #c1c1c1',\n    width: '100%',\n    height: '40px',\n    background: '#fff',\n    fontSize: '15px'\n  })\n};\n\nconst Option = props => {\n  console.log(props);\n  return React.createElement(Tooltip, {\n    content: 'Customise your option component!',\n    truncateText: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(components.Option, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\nconst MySelect = (_ref) => {\n  let label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const _useField = useField(props),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  const _useFormikContext = useFormikContext(),\n        setFieldValue = _useFormikContext.setFieldValue;\n\n  const id = props.id,\n        placeholder = props.placeholder,\n        options = props.options;\n  const name = field.name,\n        value = field.value,\n        onBlur = field.onBlur;\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: id || name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, label), React.createElement(Select, {\n    id: id || name,\n    styles: customStyles,\n    onChange: category => setFieldValue('category', category),\n    name: name,\n    value: value,\n    onBlur: onBlur,\n    placeholder: placeholder,\n    options: options,\n    components: {\n      MultiValue: customSingleValue\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nMySelect.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null\n};\nMySelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string\n};\nexport default MySelect;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/MySelect/index.jsx"],"names":["React","PropTypes","useField","useFormikContext","Select","StyledLabel","ErrorMessage","ReactIcons","customStyles","control","styles","backgroundColor","borderRadius","border","width","height","background","fontSize","Option","props","console","log","MySelect","label","field","meta","setFieldValue","id","placeholder","options","name","value","onBlur","category","MultiValue","customSingleValue","touched","error","defaultProps","propTypes","arrayOf","object","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from 'formik';\nimport Select from 'react-select';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { StyledLabel, ErrorMessage } from '../styles';\nimport * as ReactIcons from 'react-icons/fa';\n\nconst customStyles = {\n  control: styles => ({\n    ...styles,\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    border: '1px solid #c1c1c1',\n    width: '100%',\n    height: '40px',\n    background: '#fff',\n    fontSize: '15px',\n  }),\n};\n\nconst Option = props => {\n  console.log(props);\n  return (\n    <Tooltip content={'Customise your option component!'} truncateText>\n      <components.Option {...props} />\n    </Tooltip>\n  );\n};\n\nconst MySelect = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  const { setFieldValue } = useFormikContext();\n  const { id, placeholder, options } = props;\n  const { name, value, onBlur } = field;\n\n  return (\n    <>\n      <StyledLabel htmlFor={id || name}>{label}</StyledLabel>\n      <Select\n        id={id || name}\n        styles={customStyles}\n        onChange={category => setFieldValue('category', category)}\n        name={name}\n        value={value}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        options={options}\n        components={{ MultiValue: customSingleValue }}\n      />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nMySelect.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null,\n};\n\nMySelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport default MySelect;\n"]},"metadata":{},"sourceType":"module"}