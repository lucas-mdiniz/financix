{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/Graphs/Pie/index.jsx\";\nimport React, { useRef } from 'react';\nimport 'tippy.js/dist/tippy.css';\nimport * as d3 from 'd3';\nimport tippy, { followCursor } from 'tippy.js';\nimport { LegendColorBox, LegendTitle, LegendPercentage, LegendItem, PieWrapper } from './styles';\n\nconst Pie = ({\n  data,\n  outerRadius,\n  innerRadius = 0,\n  width,\n  height,\n  legend,\n  colors\n}) => {\n  const graphRef = useRef(null);\n  const graphContainer = d3.select(graphRef.current);\n  const arcs = d3.pie().value(value => value.value)(data).sort((a, b) => a.data.name.localeCompare(b.data.name));\n  const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n  graphContainer.selectAll('path').data(arcs).enter().append('path').attr('fill', d => {\n    return colors[d.index];\n  }).attr('stroke', 'white').attr('d', arc).each(function (d) {\n    const pathReference = d3.select(this)._groups[0][0];\n\n    tippy(pathReference, {\n      content: d.data.name,\n      theme: 'light',\n      arrow: false,\n      followCursor: true,\n      plugins: [followCursor]\n    });\n  });\n  return React.createElement(PieWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: graphRef,\n    transform: `translate(${outerRadius} ${outerRadius})`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), legend && React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, arcs.map(currentArc => React.createElement(LegendItem, {\n    key: currentArc.data.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(LegendColorBox, {\n    color: colors[currentArc.index],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(LegendTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, currentArc.data.name, \": \"), React.createElement(LegendPercentage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, currentArc.data.value)))));\n};\n\nexport default Pie;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/Graphs/Pie/index.jsx"],"names":["React","useRef","d3","tippy","followCursor","LegendColorBox","LegendTitle","LegendPercentage","LegendItem","PieWrapper","Pie","data","outerRadius","innerRadius","width","height","legend","colors","graphRef","graphContainer","select","current","arcs","pie","value","sort","a","b","name","localeCompare","arc","selectAll","enter","append","attr","d","index","each","pathReference","_groups","content","theme","arrow","plugins","map","currentArc","id"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport 'tippy.js/dist/tippy.css';\nimport * as d3 from 'd3';\nimport tippy, { followCursor } from 'tippy.js';\nimport {\n  LegendColorBox,\n  LegendTitle,\n  LegendPercentage,\n  LegendItem,\n  PieWrapper,\n} from './styles';\n\nconst Pie = ({\n  data,\n  outerRadius,\n  innerRadius = 0,\n  width,\n  height,\n  legend,\n  colors,\n}) => {\n  const graphRef = useRef(null);\n\n  const graphContainer = d3.select(graphRef.current);\n\n  const arcs = d3\n    .pie()\n    .value(value => value.value)(data)\n    .sort((a, b) => a.data.name.localeCompare(b.data.name));\n\n  const arc = d3\n    .arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n  graphContainer\n    .selectAll('path')\n    .data(arcs)\n    .enter()\n    .append('path')\n    .attr('fill', d => {\n      return colors[d.index];\n    })\n    .attr('stroke', 'white')\n    .attr('d', arc)\n    .each(function(d) {\n      const pathReference = d3.select(this)._groups[0][0];\n\n      tippy(pathReference, {\n        content: d.data.name,\n        theme: 'light',\n        arrow: false,\n        followCursor: true,\n        plugins: [followCursor],\n      });\n    });\n\n  return (\n    <PieWrapper>\n      <div>\n        <svg width={width} height={height}>\n          <g\n            ref={graphRef}\n            transform={`translate(${outerRadius} ${outerRadius})`}\n          />\n        </svg>\n      </div>\n      {legend && (\n        <ul>\n          {arcs.map(currentArc => (\n            <LegendItem key={currentArc.data.id}>\n              <LegendColorBox color={colors[currentArc.index]} />\n              <LegendTitle>{currentArc.data.name}: </LegendTitle>\n              <LegendPercentage>{currentArc.data.value}</LegendPercentage>\n            </LegendItem>\n          ))}\n        </ul>\n      )}\n    </PieWrapper>\n  );\n};\n\nexport default Pie;\n"]},"metadata":{},"sourceType":"module"}