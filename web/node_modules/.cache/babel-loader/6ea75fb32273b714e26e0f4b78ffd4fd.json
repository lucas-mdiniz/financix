{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/MyTextArea/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { StyledInput, StyledLabel, ErrorMessage } from '../styles';\n\nconst MyTextArea = (_ref) => {\n  let label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const _useField = useField(props),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  const id = props.id,\n        placeholder = props.placeholder;\n  const name = field.name,\n        value = field.value,\n        onBlur = field.onBlur,\n        onChange = field.onChange;\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: id || name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, label), React.createElement(StyledInput, {\n    as: \"textarea\",\n    rows: \"4\",\n    onChange: onChange,\n    name: name,\n    value: value,\n    onBlur: onBlur,\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nMyTextArea.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null\n};\nMyTextArea.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string\n};\nexport default MyTextArea;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/MyTextArea/index.jsx"],"names":["React","PropTypes","useField","StyledInput","StyledLabel","ErrorMessage","MyTextArea","label","props","field","meta","id","placeholder","name","value","onBlur","onChange","touched","error","defaultProps","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,WAAvD;;AAEA,MAAMC,UAAU,GAAG,UAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAAA,oBACpBN,QAAQ,CAACM,KAAD,CADY;AAAA;AAAA,QACnCC,KADmC;AAAA,QAC5BC,IAD4B;;AAAA,QAElCC,EAFkC,GAEdH,KAFc,CAElCG,EAFkC;AAAA,QAE9BC,WAF8B,GAEdJ,KAFc,CAE9BI,WAF8B;AAAA,QAGlCC,IAHkC,GAGAJ,KAHA,CAGlCI,IAHkC;AAAA,QAG5BC,KAH4B,GAGAL,KAHA,CAG5BK,KAH4B;AAAA,QAGrBC,MAHqB,GAGAN,KAHA,CAGrBM,MAHqB;AAAA,QAGbC,QAHa,GAGAP,KAHA,CAGbO,QAHa;AAK1C,SACE,0CACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEL,EAAE,IAAIE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCN,KAAnC,CADF,EAEE,oBAAC,WAAD;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,QAAQ,EAAES,QAHZ;AAIE,IAAA,IAAI,EAAEH,IAJR;AAKE,IAAA,KAAK,EAAEC,KALT;AAME,IAAA,MAAM,EAAEC,MANV;AAOE,IAAA,WAAW,EAAEH,WAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWGF,IAAI,CAACO,OAAL,IAAgBP,IAAI,CAACQ,KAArB,GACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeR,IAAI,CAACQ,KAApB,CADD,GAEG,IAbN,CADF;AAiBD,CAtBD;;AAwBAZ,UAAU,CAACa,YAAX,GAA0B;AACxBZ,EAAAA,KAAK,EAAE,EADiB;AAExBK,EAAAA,WAAW,EAAE,EAFW;AAGxBD,EAAAA,EAAE,EAAE;AAHoB,CAA1B;AAMAL,UAAU,CAACc,SAAX,GAAuB;AACrBb,EAAAA,KAAK,EAAEN,SAAS,CAACoB,MADI;AAErBV,EAAAA,EAAE,EAAEV,SAAS,CAACoB,MAFO;AAGrBT,EAAAA,WAAW,EAAEX,SAAS,CAACoB;AAHF,CAAvB;AAMA,eAAef,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useField } from 'formik';\nimport { StyledInput, StyledLabel, ErrorMessage } from '../styles';\n\nconst MyTextArea = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const { id, placeholder } = props;\n  const { name, value, onBlur, onChange } = field;\n\n  return (\n    <>\n      <StyledLabel htmlFor={id || name}>{label}</StyledLabel>\n      <StyledInput\n        as=\"textarea\"\n        rows=\"4\"\n        onChange={onChange}\n        name={name}\n        value={value}\n        onBlur={onBlur}\n        placeholder={placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nMyTextArea.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null,\n};\n\nMyTextArea.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport default MyTextArea;\n"]},"metadata":{},"sourceType":"module"}