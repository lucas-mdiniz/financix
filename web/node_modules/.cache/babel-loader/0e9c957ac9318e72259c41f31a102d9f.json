{"ast":null,"code":"import _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport Icons from '../assets/Icons';\nimport api from '../services/api';\n\nconst useCategories = () => {\n  const _useState = useState([{}]),\n        _useState2 = _slicedToArray(_useState, 2),\n        expenseCategories = _useState2[0],\n        setExpenseCategories = _useState2[1];\n\n  const _useState3 = useState([{}]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        earningCategories = _useState4[0],\n        setEarningCategories = _useState4[1];\n\n  useEffect(() => {\n    async function getCategories() {\n      try {\n        const response = await api.get('/categories');\n        setExpenseCategories(response.data.filter(category => category.type === 'expense'));\n        setEarningCategories(response.data.filter(category => category.type === 'earning'));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getCategories();\n  }, []);\n  const expenses = expenseCategories.map(expense => {\n    return {\n      label: expense.name || '',\n      value: expense.slug || '',\n      icon: Icons.expense[expense.slug] || '',\n      id: expense.id\n    };\n  });\n  const earnings = earningCategories.map(earning => {\n    return {\n      label: earning.name || '',\n      value: earning.slug || '',\n      icon: Icons.earnings[earning.slug] || '',\n      id: earning.id\n    };\n  });\n  return [expenses, earnings];\n};\n\nexport default useCategories;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/hooks/useCategories.jsx"],"names":["useState","useEffect","Icons","api","useCategories","expenseCategories","setExpenseCategories","earningCategories","setEarningCategories","getCategories","response","get","data","filter","category","type","error","console","expenses","map","expense","label","name","value","slug","icon","id","earnings","earning"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA,oBACwBJ,QAAQ,CAAC,CAAC,EAAD,CAAD,CADhC;AAAA;AAAA,QACnBK,iBADmB;AAAA,QACAC,oBADA;;AAAA,qBAEwBN,QAAQ,CAAC,CAAC,EAAD,CAAD,CAFhC;AAAA;AAAA,QAEnBO,iBAFmB;AAAA,QAEAC,oBAFA;;AAI1BP,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,aAAf,GAA+B;AAC7B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,aAAR,CAAvB;AACAL,QAAAA,oBAAoB,CAClBI,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkB,SAAnD,CADkB,CAApB;AAGAP,QAAAA,oBAAoB,CAClBE,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,KAAkB,SAAnD,CADkB,CAApB;AAGD,OARD,CAQE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;;AAEDP,IAAAA,aAAa;AACd,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,QAAMS,QAAQ,GAAGb,iBAAiB,CAACc,GAAlB,CAAsBC,OAAO,IAAI;AAChD,WAAO;AACLC,MAAAA,KAAK,EAAED,OAAO,CAACE,IAAR,IAAgB,EADlB;AAELC,MAAAA,KAAK,EAAEH,OAAO,CAACI,IAAR,IAAgB,EAFlB;AAGLC,MAAAA,IAAI,EAAEvB,KAAK,CAACkB,OAAN,CAAcA,OAAO,CAACI,IAAtB,KAA+B,EAHhC;AAILE,MAAAA,EAAE,EAAEN,OAAO,CAACM;AAJP,KAAP;AAMD,GAPgB,CAAjB;AASA,QAAMC,QAAQ,GAAGpB,iBAAiB,CAACY,GAAlB,CAAsBS,OAAO,IAAI;AAChD,WAAO;AACLP,MAAAA,KAAK,EAAEO,OAAO,CAACN,IAAR,IAAgB,EADlB;AAELC,MAAAA,KAAK,EAAEK,OAAO,CAACJ,IAAR,IAAgB,EAFlB;AAGLC,MAAAA,IAAI,EAAEvB,KAAK,CAACyB,QAAN,CAAeC,OAAO,CAACJ,IAAvB,KAAgC,EAHjC;AAILE,MAAAA,EAAE,EAAEE,OAAO,CAACF;AAJP,KAAP;AAMD,GAPgB,CAAjB;AASA,SAAO,CAACR,QAAD,EAAWS,QAAX,CAAP;AACD,CAzCD;;AA2CA,eAAevB,aAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Icons from '../assets/Icons';\nimport api from '../services/api';\n\nconst useCategories = () => {\n  const [expenseCategories, setExpenseCategories] = useState([{}]);\n  const [earningCategories, setEarningCategories] = useState([{}]);\n\n  useEffect(() => {\n    async function getCategories() {\n      try {\n        const response = await api.get('/categories');\n        setExpenseCategories(\n          response.data.filter(category => category.type === 'expense')\n        );\n        setEarningCategories(\n          response.data.filter(category => category.type === 'earning')\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getCategories();\n  }, []);\n\n  const expenses = expenseCategories.map(expense => {\n    return {\n      label: expense.name || '',\n      value: expense.slug || '',\n      icon: Icons.expense[expense.slug] || '',\n      id: expense.id,\n    };\n  });\n\n  const earnings = earningCategories.map(earning => {\n    return {\n      label: earning.name || '',\n      value: earning.slug || '',\n      icon: Icons.earnings[earning.slug] || '',\n      id: earning.id,\n    };\n  });\n\n  return [expenses, earnings];\n};\n\nexport default useCategories;\n"]},"metadata":{},"sourceType":"module"}