{"ast":null,"code":"import _objectSpread from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/lucas/Public/repos/financix/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/Public/repos/financix/src/components/FormComponents/MyDateField/index.jsx\";\nimport React from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-datepicker';\nimport { StyledLabel, StyledDatePickerWrapper, ErrorMessage } from '../styles';\n\nconst MyDateField = (_ref) => {\n  let label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  const _useField = useField(_objectSpread({}, props, {\n    type: 'date'\n  })),\n        _useField2 = _slicedToArray(_useField, 2),\n        field = _useField2[0],\n        meta = _useField2[1];\n\n  const id = props.id,\n        placeholder = props.placeholder;\n  const name = field.name,\n        value = field.value,\n        onBlur = field.onBlur;\n\n  const _useFormikContext = useFormikContext(),\n        setFieldValue = _useFormikContext.setFieldValue;\n\n  return React.createElement(React.Fragment, null, React.createElement(StyledLabel, {\n    htmlFor: id || name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, label), React.createElement(StyledDatePickerWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    id: id || name,\n    selected: meta.value,\n    onChange: date => setFieldValue('date', date),\n    name: name,\n    value: value.toUTCString(),\n    onBlur: onBlur,\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), meta.touched && meta.error ? React.createElement(ErrorMessage, {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, meta.error) : null);\n};\n\nMyDateField.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null\n};\nMyDateField.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string\n};\nexport default MyDateField;","map":{"version":3,"sources":["/home/lucas/Public/repos/financix/src/components/FormComponents/MyDateField/index.jsx"],"names":["React","useField","useFormikContext","PropTypes","DatePicker","StyledLabel","StyledDatePickerWrapper","ErrorMessage","MyDateField","label","props","type","field","meta","id","placeholder","name","value","onBlur","setFieldValue","date","toUTCString","touched","error","defaultProps","propTypes","string"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,QAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT,EAAsBC,uBAAtB,EAA+CC,YAA/C,QAAmE,WAAnE;;AAEA,MAAMC,WAAW,GAAG,UAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAAA,oBACrBT,QAAQ,mBAAMS,KAAN;AAAaC,IAAAA,IAAI,EAAE;AAAnB,KADa;AAAA;AAAA,QACpCC,KADoC;AAAA,QAC7BC,IAD6B;;AAAA,QAEnCC,EAFmC,GAEfJ,KAFe,CAEnCI,EAFmC;AAAA,QAE/BC,WAF+B,GAEfL,KAFe,CAE/BK,WAF+B;AAAA,QAGnCC,IAHmC,GAGXJ,KAHW,CAGnCI,IAHmC;AAAA,QAG7BC,KAH6B,GAGXL,KAHW,CAG7BK,KAH6B;AAAA,QAGtBC,MAHsB,GAGXN,KAHW,CAGtBM,MAHsB;;AAAA,4BAKjBhB,gBAAgB,EALC;AAAA,QAKnCiB,aALmC,qBAKnCA,aALmC;;AAO3C,SACE,0CACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEL,EAAE,IAAIE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCP,KAAnC,CADF,EAEE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,EAAE,EAAEK,EAAE,IAAIE,IADZ;AAEE,IAAA,QAAQ,EAAEH,IAAI,CAACI,KAFjB;AAGE,IAAA,QAAQ,EAAEG,IAAI,IAAID,aAAa,CAAC,MAAD,EAASC,IAAT,CAHjC;AAIE,IAAA,IAAI,EAAEJ,IAJR;AAKE,IAAA,KAAK,EAAEC,KAAK,CAACI,WAAN,EALT;AAME,IAAA,MAAM,EAAEH,MANV;AAOE,IAAA,WAAW,EAAEH,WAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAaGF,IAAI,CAACS,OAAL,IAAgBT,IAAI,CAACU,KAArB,GACC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCV,IAAI,CAACU,KAAtC,CADD,GAEG,IAfN,CADF;AAmBD,CA1BD;;AA4BAf,WAAW,CAACgB,YAAZ,GAA2B;AACzBf,EAAAA,KAAK,EAAE,EADkB;AAEzBM,EAAAA,WAAW,EAAE,EAFY;AAGzBD,EAAAA,EAAE,EAAE;AAHqB,CAA3B;AAMAN,WAAW,CAACiB,SAAZ,GAAwB;AACtBhB,EAAAA,KAAK,EAAEN,SAAS,CAACuB,MADK;AAEtBZ,EAAAA,EAAE,EAAEX,SAAS,CAACuB,MAFQ;AAGtBX,EAAAA,WAAW,EAAEZ,SAAS,CAACuB;AAHD,CAAxB;AAMA,eAAelB,WAAf","sourcesContent":["import React from 'react';\nimport { useField, useFormikContext } from 'formik';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-datepicker';\nimport { StyledLabel, StyledDatePickerWrapper, ErrorMessage } from '../styles';\n\nconst MyDateField = ({ label, ...props }) => {\n  const [field, meta] = useField({ ...props, type: 'date' });\n  const { id, placeholder } = props;\n  const { name, value, onBlur } = field;\n\n  const { setFieldValue } = useFormikContext();\n\n  return (\n    <>\n      <StyledLabel htmlFor={id || name}>{label}</StyledLabel>\n      <StyledDatePickerWrapper>\n        <DatePicker\n          id={id || name}\n          selected={meta.value}\n          onChange={date => setFieldValue('date', date)}\n          name={name}\n          value={value.toUTCString()}\n          onBlur={onBlur}\n          placeholder={placeholder}\n        />\n      </StyledDatePickerWrapper>\n      {meta.touched && meta.error ? (\n        <ErrorMessage className=\"error\">{meta.error}</ErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\nMyDateField.defaultProps = {\n  label: '',\n  placeholder: '',\n  id: null,\n};\n\nMyDateField.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport default MyDateField;\n"]},"metadata":{},"sourceType":"module"}